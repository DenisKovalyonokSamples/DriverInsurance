<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- Unique key for cached download -->
    <_XbdKey_playservicesbasement>playservices-11.4.2/playservicesbasement</_XbdKey_playservicesbasement>
    <!-- Path to .aar file within the extracted contents of the cached download -->
    <_XbdAarFile_playservicesbasement>m2repository\com\google\android\gms\play-services-basement\11.4.2\play-services-basement-11.4.2.aar</_XbdAarFile_playservicesbasement>
    <!-- Full path to .aar file, assuming we had to download to the cache - we reset this later if it is in the sdk -->
    <_XbdAarFileFullPath_playservicesbasement>$(XamarinBuildDownloadDir)$(_XbdKey_playservicesbasement)\play-services-basement-11.4.2.aar</_XbdAarFileFullPath_playservicesbasement>
    <!-- Assembly name to embed .aar in -->
    <_XbdAssemblyName_playservicesbasement>Xamarin.GooglePlayServices.Basement</_XbdAssemblyName_playservicesbasement>
  </PropertyGroup>
  <ItemGroup>
    <XamarinBuildRestoreResources Include="_XbdRestoreItems_playservicesbasement" />
  </ItemGroup>
  <Target Name="_XbdRestoreItems_playservicesbasement">
    <!-- Check if the aar file is in the android sdk already and change the path to use to it, if it's found -->
    <CreateProperty Value="$(AndroidSdkDirectory)\extras\google\$(_XbdAarFile_playservicesbasement)" Condition="Exists('$(AndroidSdkDirectory)\extras\google\$(_XbdAarFile_playservicesbasement)')">
      <Output PropertyName="_XbdAarFileFullPath_playservicesbasement" TaskParameter="Value" />
    </CreateProperty>
    <ItemGroup>
      <XamarinBuildDownload Include="$(_XbdKey_playservicesbasement)">
        <Url>https://dl.google.com/dl/android/maven2/com/google/android/gms/play-services-basement/11.4.2/play-services-basement-11.4.2.aar</Url>
        <ToFile>play-services-basement-11.4.2.aar</ToFile>
        <Kind>Uncompressed</Kind>
        <!-- <Md5>$XbdMd5$</Md5> -->
      </XamarinBuildDownload>
    </ItemGroup>
    <ItemGroup>
      <XamarinBuildDownloadRestoreAssemblyAar Include="$(_XbdAarFileFullPath_playservicesbasement)">
        <LogicalName>__AndroidLibraryProjects__.zip</LogicalName>
        <AssemblyName>$(_XbdAssemblyName_playservicesbasement)</AssemblyName>
      </XamarinBuildDownloadRestoreAssemblyAar>
    </ItemGroup>
  </Target>
  <Target Name="ProcessGoogleServicesJsonChecks" Condition=" '@(GoogleServicesJson)' == '' " BeforeTargets="BeforeBuild">
    <Message Text="No GoogleServicesJson file specified." />
  </Target>
  <ItemGroup>
    <AvailableItemName Include="GoogleServicesJson" />
  </ItemGroup>
  <PropertyGroup>
    <ProcessGoogleServicesJsonTaskFilename Condition=" '$(ProcessGoogleServicesJsonTaskFilename)' == '' ">$(MSBuildThisFileDirectory)Xamarin.GooglePlayServices.Tasks.dll</ProcessGoogleServicesJsonTaskFilename>
    <ProcessGoogleServicesJsonResDirName Condition=" '$(ProcessGoogleServicesJsonResDirName)' == '' ">googsvcsjson</ProcessGoogleServicesJsonResDirName>
    <ProcessGoogleServicesJsonResDirPath>$(IntermediateOutputPath)$(ProcessGoogleServicesJsonResDirName)\</ProcessGoogleServicesJsonResDirPath>
    <ProcessGoogleServicesJsonResStringsPath>$(ProcessGoogleServicesJsonResDirPath)values\goog_svcs_json.xml</ProcessGoogleServicesJsonResStringsPath>
    <ProcessGoogleServicesJsonResXmlPath>$(ProcessGoogleServicesJsonResDirPath)xml\global_tracker.xml</ProcessGoogleServicesJsonResXmlPath>
    <ProcessGoogleServicesJsonStampPath>$(IntermediateOutputPath)googsvcsjson.stamp</ProcessGoogleServicesJsonStampPath>
  </PropertyGroup>
  <PropertyGroup>
    <CleanDependsOn>
      $(CleanDependsOn);
      _CleanProcessGoogleServicesJson;
    </CleanDependsOn>
  </PropertyGroup>
  <UsingTask AssemblyFile="Xamarin.GooglePlayServices.Tasks.dll" TaskName="Xamarin.GooglePlayServices.Tasks.ProcessGoogleServicesJson" />
  <Target Name="SetupGoogleServicesJson" Condition=" '@(GoogleServicesJson)' != '' AND '$(AndroidApplication)' == 'True'" BeforeTargets="ProcessGoogleServicesJson">
    <ConvertToAbsolutePath Paths="$(ProcessGoogleServicesJsonResDirPath)">
      <Output TaskParameter="AbsolutePaths" PropertyName="ProcessGoogleServicesJsonResDirPathAbs" />
    </ConvertToAbsolutePath>
    <ItemGroup>
      <LibraryResourceDirectories Condition="Exists ('$(ProcessGoogleServicesJsonResDirPathAbs)')" Include="$(ProcessGoogleServicesJsonResDirPathAbs)" />
    </ItemGroup>
  </Target>
  <Target Name="ProcessGoogleServicesJson" Condition=" '@(GoogleServicesJson)' != '' AND '$(AndroidApplication)' == 'True'" BeforeTargets="_GenerateAndroidResourceDir" AfterTargets="SetupGoogleServicesJson" DependsOnTargets="SetupGoogleServicesJson" Inputs="@(GoogleServicesJson)" Outputs="$(IntermediateOutputPath)googsvcsjson.stamp">
    <ProcessGoogleServicesJson GoogleServicesJsons="@(GoogleServicesJson)" ResPath="$(ProcessGoogleServicesJsonResDirPath)" StampPath="$(ProcessGoogleServicesJsonStampPath)" ResStringsPath="$(ProcessGoogleServicesJsonResStringsPath)" ResXmlPath="$(ProcessGoogleServicesJsonResXmlPath)" AndroidPackageName="$(_AndroidPackage)">
      <Output TaskParameter="ResPathAbs" ItemName="LibraryResourceDirectories" />
    </ProcessGoogleServicesJson>
    <ItemGroup>
      <FileWrites Condition="Exists ('$(ProcessGoogleServicesJsonResStringsPath)')" Include="$(ProcessGoogleServicesJsonResStringsPath)" />
      <FileWrites Condition="Exists ('$(ProcessGoogleServicesJsonResXmlPath)')" Include="$(ProcessGoogleServicesJsonResXmlPath)" />
    </ItemGroup>
  </Target>
  <Target Name="_CleanProcessGoogleServicesJson">
    <RemoveDir Directories="$(ProcessGoogleServicesJsonResDirPath)" Condition="Exists ('$(ProcessGoogleServicesJsonResDirPath)' )" />
    <Delete Files="$(ProcessGoogleServicesJsonStampPath)" />
  </Target>
  <PropertyGroup Condition=" $(IncludeOrgApacheHttpLegacyJarInProguard) == '' ">
    <IncludeOrgApacheHttpLegacyJarInProguard>True</IncludeOrgApacheHttpLegacyJarInProguard>
  </PropertyGroup>
  <Target Name="AddOrgApacheHttpLegacyJarInProguardExternalJavaLibs" DependsOnTargets="_ResolveMonoAndroidSdks;_ValidateAndroidPackageProperties" AfterTargets="_ResolveMonoAndroidSdks;_ValidateAndroidPackageProperties" BeforeTargets="Proguard" Condition="$(IncludeOrgApacheHttpLegacyJarInProguard) == 'True' and Exists ('$(AndroidSdkDirectory)/platforms/android-$(_AndroidTargetSdkVersion)/optional/org.apache.http.legacy.jar')">
    <ItemGroup>
      <AndroidExternalJavaLibrary Include="$(AndroidSdkDirectory)/platforms/android-$(_AndroidTargetSdkVersion)/optional/org.apache.http.legacy.jar" />
    </ItemGroup>
  </Target>
</Project>