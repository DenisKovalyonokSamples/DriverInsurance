<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfChart.Android</name>
    </assembly>
    <members>
        <member name="T:Com.Syncfusion.Charts.CategoryAxis">
            <summary>
            Represents a specialized axis to plot categorical data. This class contains
            properties to customize grid lines, ticks and labels.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CategoryAxis.LabelPlacement">
            <summary>
             Gets or sets an option that determines whether to place axis label, in between the tick lines or on the tick lines.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CategoryAxis.StripLines">
            <summary>
            Gets or sets the collection of strip lines to be added to the chart axis.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartAxis">
            <summary>
            Serves as a base class for all types of axis.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.AutoScrollingDelta">
            <summary>
            Gets or sets the value that determines the range of value to be visible during auto scrolling.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.AutoScrollingMode">
            <summary>
            Gets or sets the mode to determine whether the axis should be auto scrolled at start or end position by using <see cref="T:Com.Syncfusion.Charts.ChartAutoScrollingMode"/> enum type.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.PolarAngle">
            <summary>
            Gets or sets the angle as a start positon for polar or radar series by using <see cref="T:Com.Syncfusion.Charts.ChartPolarAngle"/> enum type.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.EdgeLabelsDrawingMode">
            <summary>
             Gets or sets a drawing mode of the axis labels for better user experience.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.OpposedPosition">
            <summary>
            Gets or sets the value that indicates whether to draw axis at the opposite side of axis in the chart.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.PlotOffset">
            <summary>
            Gets or sets the value from which the axis elements like label, ticklines will be drawn inside axis bounds.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.Visibility">
            <summary>
            Gets or sets the value that indicates whether the axis is visible in the chart.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.MaximumLabels">
            <summary>
            Gets or sets the value that determines the number of labels to be displayed per 100 pixels.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.LabelRotationAngle">
            <summary>
            Gets or sets the rotation angle of the axis labels.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.AxisLineOffset">
            <summary>
            Gets or sets offset value for the axis line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.LabelExtent">
            <summary>
            Gets or sets the value that determines the distance between the axis label and axis title.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.ZoomPosition">
            <summary>
            Gets or sets the value, between 0 to 1, that indicates the start position in the actual range of the axis.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.VisibleLabels">
            <summary>
            Gets the visible labels.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.VisibleRange">
            <summary>
            Gets the visible range.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.ZoomFactor">
            <summary>
            Gets or sets the value, between 0 to 1, that indicates the zoom level of the axis.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.LabelsIntersectAction">
            <summary>
            Gets or sets an action to be taken when two labels intersect in bounds.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.TickPosition">
            <summary>
            Gets or sets the position of the axis tick lines.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.ShowMajorGridLines">
            <summary>
            Gets or sets the value that indicates whether to show the major gridlines for the axis.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.LabelStyle">
            <summary>
            Gets the options for customizing the axis labels.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.MajorGridLineStyle">
            <summary>
             Gets the options for customizing the major gridlines.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.MajorTickStyle">
            <summary>
            Gets the options for customizing the major tick lines.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.Title">
            <summary>
             Gets the title for the axis.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.CrossesAt">
            <summary>
            Gets or sets Datetime or double that represents crossing value to axis.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.CrossingAxisName">
            <summary>
            Gets or sets the string value that represents name of the crossing axis.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.RenderNextToCrossingValue">
            <summary>
            Gets or sets the value that determines whether the crossing axis should be placed at crossing position or not.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.ShowTrackballInfo">
            <summary>
            Gets or sets the value that indicates whether to show the axis information, when the trackball is shown.
            </summary>
        </member>
        <member name="E:Com.Syncfusion.Charts.ChartAxis.LabelClicked">
            <summary>
            Event is raised, when the axis label is clicked.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartAxis.UpdateAutoScrollingDelta(Com.Syncfusion.Charts.DoubleRange,System.Double)">
            <summary>
             Update Auto Scrolling Delta value  based on auto scrolling delta mode option.
            </summary>
            <param name="actualRange"></param>
            <param name="scrollingDelta"></param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartAxis.GenerateVisibleLabels">
            <summary>
            Method implementation for Generate Labels in ChartAxis
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartAxis.IsLabelClickedEventHooked">
            <summary>
            Method used to check whether LabelClicked event is raised
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartAxis.OnTouchUp(System.Single,System.Single)">
            <summary>
            The method used to get exact x, y point to check whether it is in the axis label or not
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.ChartAxisLabel.LabelContent">
            <summary>
            Gets or sets LabelContent property
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.ChartAxisLabel.Position">
            <summary>
            Gets or sets Position property
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartAxis.ChartAxisLabel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartAxis.ChartAxisLabel.#ctor(System.Double,System.Object)">
            <summary>
            Called when instance created for ChartAxisLabel with following arguments
            </summary>
            <param name="position"></param>
            <param name="labelContent"></param>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartAxis.ChartAxisLabelClickedEventArgs">
            <summary>
            This class serves as an event data for LabelClicked event.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxis.ChartAxisLabelClickedEventArgs.Label">
            <summary>
            Gets the <see cref="T:Com.Syncfusion.Charts.ChartAxis.ChartAxisLabel"/>, which contains axis label position and text .
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartAxis.PointToValue(Android.Graphics.PointF)">
            <summary>
            Method used to get exact value in hit point.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.DateTimeAxis">
            <summary>
            Represents a specialized axis to plot data with date time values. 
            This class contains properties to customize grid lines, ticks and labels. 
            Ranges can be explicitly set using Minimum and Maximum properties. 
            If the ranges are not specified, nice range and intervals will be calculated
            automatically.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DateTimeAxis.IntervalType">
            <summary>
            Gets or sets the date time unit of the value specified in the <c>Interval</c> property.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DateTimeAxis.StripLines">
            <summary>
            Gets or sets the collection of strip lines to be added to the chart axis.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DateTimeAxis.RangePadding">
            <summary>
            Gets or sets a padding type for the date time axis range.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DateTimeAxis.AutoScrollingDeltaType">
            <summary>
            Gets or sets the date time unit of the value specified in the <c>AutoScrollingDelta</c> property.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.AxisLabelLayout.CreateAxisLayout(Com.Syncfusion.Charts.ChartAxis)">
            <summary>
            Method used to create the axis layout.
            </summary>
            <param name="chartAxis"></param>
            <returns></returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.VerticalLabelLayout.CalculatePolarPosition(System.Single,System.Single,System.Single)">
            <summary>
            Method used to calculate the secondary axis label position.
            </summary>
            <param name="coeff"></param>
            <param name="height"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.VerticalLabelLayout.LayoutElements">
            <summary>
            Returns desired width
            </summary>
            <returns></returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.LogarithmicAxis">
            <summary>
            Represents a specialized axis to plot data with number values in 
            logarithmic scale. This class contains properties to customize grid 
            lines, ticks and labels. Ranges can be explicitly set using Minimum
            and Maximum properties. If the ranges are not specified, nice range
            and intervals will be calculated automatically.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.LogarithmicAxis.StripLines">
            <summary>
            Gets or sets the collection of strip lines to be added to the chart axis.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.LogarithmicAxis.LogarithmicBase">
            <summary>
             Gets or sets the base value of the logarithmic axis. The default value is 10.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.NumericalAxis">
            <summary>
            Represents a specialized axis to plot data with number values. 
            This class contains properties to customize grid lines, ticks and
            labels. Ranges can be explicitly set using Minimum and Maximum 
            properties. If the ranges are not specified, nice range and intervals
            will be calculated automatically.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.NumericalAxis.StripLines">
            <summary>
            Gets or sets the collection of strip lines to be added to the chart axis.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.NumericalAxis.RangePadding">
            <summary>
            Gets or sets a padding type for the numerical axis range. 
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.RangeAxisBase">
            <summary>
            Serves as a base class for all types of range axis.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeAxisBase.MinorTicksPerInterval">
            <summary>
            Gets or sets the value that defines the number of minor tick/grid lines that resided between the adjacent major tick/grid lines.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeAxisBase.EdgeLabelsVisibilityMode">
            <summary>
            Gets or sets a visibility mode of the axis labels for better user experience.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeAxisBase.MinorGridLineStyle">
            <summary>
             Gets the customized style for the minor gridline.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeAxisBase.MinorTickStyle">
            <summary>
            Gets the customized style for the minor tick lines.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeAxisBase.ShowMinorGridLines">
            <summary>
            Gets or sets the value that indicates whether to show the minor gridlines for the axis.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartBehavior">
            <summary>
            ChartBehavior can be added to SfChart view
            You can handle the SfChart view events directly in chart behavior, which will be helpful in designing the chart application.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartBehavior.Chart">
            <summary>
            Gets the chart.
            </summary>
            <value>The SfChart view the chart behavior is attached to. (read-only)
            You attach(or add) a chart behavior to a SfChart object using the Behavior collection property.
            </value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartTooltipBehavior.Duration">
            <summary>
            Gets or sets double value that indicates duration of tooltip. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartTooltipBehavior.BackgroundColor">
            <summary>
            Gets or sets the BackgroundColor of Tooltip label.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartTooltipBehavior.Hide(System.Boolean)">
            <summary>
            Method used to hide the tooltip from view. 
            </summary>
            <param name="canAnimate"></param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartTooltipBehavior.Show(System.Single,System.Single,System.Boolean)">
            <summary>
            Method used to show tooltip in view. 
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="canAnimate"></param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartTooltipBehavior.DrawTooltip(Android.Graphics.Canvas,Com.Syncfusion.Charts.TooltipView)">
            <summary>
            Draws the tooltip. You can customize the appearance and text by overriding this method.
            </summary>
            <param name="canvas"></param>
            <param name="tooltipView"></param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartLegendItem.ToggleColor">
            <summary>
            Enable and Disable the Legend Icons Color
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartLegendItemsLayout.GetLayoutSize">
            <summary>
            Method used to calculate legend ItemsLayout size. 
            </summary>
            <param name="availableHeight"></param>
            <param name="availableWidth"></param>
        </member>
        <member name="P:Com.Syncfusion.Charts.AreaSegment.XValues">
            <summary>
            Gets or sets the x values.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.AreaSegment.YValues">
            <summary>
            Gets or sets the y values.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.AreaSegment.FillPoints">
            <summary>
            Gets the drawing points.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.AreaSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Draw the segment based on the segment position.
            </summary>
            <param name="drawing">The drawing context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.AreaSegment.OnLayout">
            <summary>
            Update the segment positions when the layout was updated.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.AreaSegment.CalculateInteriorPoints">
            <summary>
            Calculate interior points.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.AreaSegment.CalculateStrokePoints">
            <summary>
            Calculate stroke points.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.AreaSegment.SetData(System.Collections.IList,System.Collections.IList)">
            <summary>
            Sets the values for this segment.
            </summary>
            <param name="xValues">The x values.</param>
            <param name="yValues">The y values.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.BarSegment.Left">
            <summary>
            Gets or sets left value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BarSegment.Top">
            <summary>
            Gets or sets top value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BarSegment.Right">
            <summary>
            Gets or sets right value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BarSegment.Bottom">
            <summary>
            Gets or sets bottom value.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.BarSegment.x1">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.BarSegment.y1">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.BarSegment.x2">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.BarSegment.y2">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.BarSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Draw the segment based on the segment position.
            </summary>
            <param name="drawing">The drawing context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.BarSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.BubbleSegment.Radius">
            <summary>
            Gets or sets the radius of the segment.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BubbleSegment.CenterX">
            <summary>
            Gets or sets the center point of x.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BubbleSegment.CenterY">
            <summary>
            Gets or sets the center point of y.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.BubbleSegment.xData">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.BubbleSegment.yData">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.BubbleSegment.size">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.BubbleSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Draw the segment based on the segment position.
            </summary>
            <param name="drawing">The drawing context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.BubbleSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.BubbleSegment.OnLayout">
            <summary>
            Update the segment positions when the layout was updated.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.CandleSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Draw the segment based on the segment position.
            </summary>
            <param name="drawing">The drawing context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.CandleSegment.OnLayout">
            <summary>
            Update the segment positions when the layout was updated.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.CandleSegment.SetData(System.Double[],System.Boolean,System.Boolean)">
            <summary>
            Sets the values for this segment.
            </summary>
            <param name="values">An array of values.</param>
            <param name="isBull">The Boolean value.</param>
            <param name="isFill">The Boolean value.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartLegend.PercentageWidth">
            <summary>
            Gets or sets double value this used to align smart legend panel in wrap mode with dock position left and right. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartLegend.Visibility">
            <summary>
            Gets or sets Visibility that indicates legend's visibility. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartLegend.MaxWidth">
            <summary>
            Gets or sets double value that used to customize legend ItemsLayout width when <see cref = "P:Com.Syncfusion.Charts.ChartLegend.OverflowMode"/> value is <see cref = "F:Com.Syncfusion.Charts.ChartLegendOverflowMode.Wrap"/>. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartLegend.OverflowMode">
            <summary>
            Gets or sets <see cref = "T:Com.Syncfusion.Charts.ChartLegendOverflowMode"/> value that indicates items overflow action in legend. 
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartLegend.RemoveLegendItem(System.Int32)">
            <summary>
            Method used to remove corresponding index legend item. 
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartLegendLayout.InsertLegendItemAt(System.Int32,System.Object,Com.Syncfusion.Charts.ChartSeries)">
            <summary>
            This method is used to add legend items for AcccumulationSeries based on the index and value.
            </summary>
            <param name="index">Index</param>
            <param name="val"></param>
            <param name="series"></param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartLegendLayout.OnUpdateItemsLayout">
            <summary>
            Method used to re-schedule the legend ItemsLayout panel. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSegment.Color">
            <summary>
            Gets or sets Color which indicates corresponding segment fill color. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSegment.Alpha">
            <summary>
            Gets or sets float value that indicates series fill color's alpha value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSegment.StrokeColor">
            <summary>
            Gets or sets Color value that indicates segment border color. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSegment.StrokeWidth">
            <summary>
            Gets or sets float value that indicates segment border thickness. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSegment.Empty">
            <summary>
            Gets or sets the value that indicates whether the segment is empty point or not.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSegment.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Method used to draw segment in series bounds. 
            </summary>
            <param name="drawing"></param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartSegment.OnLayout">
            <summary>
            Method used to calculate rendering bounds of segment. 
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartSegment.OnDraw(Android.Graphics.Canvas)">
            <summary>
            Method used to draw segment in series bounds. 
            </summary>
            <param name="canvas"></param>
        </member>
        <member name="P:Com.Syncfusion.Charts.ColumnSegment.Left">
            <summary>
            Gets or sets left value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ColumnSegment.Top">
            <summary>
            Gets or sets top value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ColumnSegment.Right">
            <summary>
            Gets or sets right value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ColumnSegment.Bottom">
            <summary>
            Gets or sets bottom value.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ColumnSegment.x1">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ColumnSegment.y1">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ColumnSegment.x2">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ColumnSegment.y2">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ColumnSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Draw the segment based on the segment position.
            </summary>
            <param name="drawing">The drawing context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ColumnSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoughnutSegment.OnLayout">
            <summary>
            Method used to calculate rendering bounds of segment. 
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoughnutSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Method used to draw segment in series bounds. 
            </summary>
            <param name="drawing"></param>
        </member>
        <member name="M:Com.Syncfusion.Charts.FunnelSegment.OnLayout">
            <summary>
            Method used to calculate rendering bounds of segment. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.HiLoOpenCloseSegment.CenterPointX">
            <summary>
            Gets or sets the center point of x.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.HiLoOpenCloseSegment.OpenPointX">
            <summary>
            Gets or sets the open point of x.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.HiLoOpenCloseSegment.ClosePointX">
            <summary>
            Gets or sets the close point of x.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.HiLoOpenCloseSegment.HighPointY">
            <summary>
            Gets or sets the high point of y.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.HiLoOpenCloseSegment.LowPointY">
            <summary>
            Gets or sets the low point of y.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.HiLoOpenCloseSegment.OpenPointY">
            <summary>
            Gets or sets the open point of y.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.HiLoOpenCloseSegment.ClosePointY">
            <summary>
            Gets or sets the close point of y.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.HiLoOpenCloseSegment.StartX">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.HiLoOpenCloseSegment.IsBull">
            <summary>
            Checks wheather segment is bull or not.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.HiLoOpenCloseSegment.CenterLow">
            <summary>
            Initialize the float fields.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.HiLoOpenCloseSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Draw the segment based on the segment position.
            </summary>
            <param name="drawing">The drawing context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.HiLoOpenCloseSegment.OnLayout">
            <summary>
            Update the segment positions when the layout was updated.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.HiLoOpenCloseSegment.SetData(System.Double[],System.Boolean,System.Boolean)">
            <summary>
            Sets the values for this segment.
            </summary>
            <param name="values">An array of values.</param>
            <param name="isBull">The Boolean value.</param>
            <param name="isFill">The Boolean value.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.LineSegment.X1">
            <summary>
            Gets or sets the x1 value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.LineSegment.Y1">
            <summary>
            Gets or sets the y1 value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.LineSegment.X2">
            <summary>
            Gets or sets the x2 value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.LineSegment.Y2">
            <summary>
            Gets or sets the y2 value.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.LineSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Draw the segment based on the segment position.
            </summary>
            <param name="drawing">The drawing context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.LineSegment.OnLayout">
            <summary>
            Update the segment positions when the layout was updated.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.LineSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ScatterSegment.OnDraw(Android.Graphics.Canvas)">
            <summary>
            Method used to draw segment in series bounds. 
            </summary>
            <param name="canvas"></param>
        </member>
        <member name="P:Com.Syncfusion.Charts.ScatterSegment.ScatterWidth">
            <summary>
            Gets or sets the scatter width.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ScatterSegment.ScatterHeight">
            <summary>
            Gets or sets the scatter height.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ScatterSegment.CenterX">
            <summary>
            Gets or sets the center point of x.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ScatterSegment.CenterY">
            <summary>
            Gets or sets the center point of y.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ScatterSegment.x">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ScatterSegment.y">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ScatterSegment.OnLayout">
            <summary>
            Update the segment positions when the layout was updated.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ScatterSegment.SetData(System.Double,System.Double)">
            <summary>
            Sets the values for this segment.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.PieSegment.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.PieSegment.EndAngle">
            <summary>
            Gets or sets the end angle.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.PieSegment.YValue">
            <summary>
            Gets or sets the y value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.PieSegment.Radius">
            <summary>
            Gets or sets the radius.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.PieSegment.OnLayout">
            <summary>
            Method used to calculate rendering bounds of segment. 
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.PieSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Method used to draw segment in series bounds. 
            </summary>
            <param name="drawing"></param>
        </member>
        <member name="M:Com.Syncfusion.Charts.PyramidSegment.OnLayout">
            <summary>
            Method used to calculate rendering bounds of segment. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeAreaSegment.XValues">
            <summary>
            Gets or sets the x values.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeAreaSegment.HighValues">
            <summary>
            Gets or sets the high values.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeAreaSegment.LowValues">
            <summary>
            Gets or sets the low values.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeAreaSegment.FillPoints">
            <summary>
            Gets the drawing points.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.RangeAreaSegment.draw">
            <summary>
            Initialize the drawing.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.RangeAreaSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Draw the segment based on the segment position.
            </summary>
            <param name="drawing">The drawing context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.RangeAreaSegment.OnLayout">
            <summary>
            Update the segment positions when the layout was updated.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.RangeColumnSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Draw the segment based on the segment position.
            </summary>
            <param name="drawing">The drawing context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.RangeColumnSegment.OnLayout">
            <summary>
            Update the segment positions when the layout was updated.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.RangeColumnSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.FastLineSegment.OnLayout">
            <summary>
            Update the segment positions when the layout was updated.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingAreaSegment.BottomValues">
            <summary>
            Gets or sets the bottom values.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingAreaSegment.TopValues">
            <summary>
            Gets or sets the top values.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingAreaSegment.FillPoints">
            <summary>
            Gets the drawing points.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.StackingAreaSegment.xValues">
            <summary>
            Initialize the array collection.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StepAreaSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Draw the segment based on the segment position.
            </summary>
            <param name="drawing">The drawing context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.StepAreaSegment.OnLayout">
            <summary>
            Update the segment positions when the layout was updated.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StepAreaSegment.SetData(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
            <summary>
            Sets the values for this segment.
            </summary>
            <param name="xValues">The x values.</param>
            <param name="yValues">The y values.</param>
        </member>
        <member name="F:Com.Syncfusion.Charts.StepLineSegment.midX">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.StepLineSegment.midY">
            <summary>
            Initialize the double fields.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StepLineSegment.X3">
            <summary>
            Initialize the float fields.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StepLineSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.StepLineSegment.OnLayout">
            <summary>
            Update the segment positions when the layout was updated.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StepLineSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Draw the segment based on the segment position.
            </summary>
            <param name="drawing">The drawing context.</param>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartSeries">
            <summary>
            Serves as a base class for all types of chart series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.ListenPropertyChange">
            <summary>
            Gets or sets bool value that used to update individual data in ItemsSource.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.DataMarker">
            <summary>
            Gets the chart datamarker labels. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.EnableAnimation">
            <summary>
            Gets or sets bool value which allows series render with animation effects. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.AnimationDuration">
            <summary>
            Gets or sets double value that represents animation time in view. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.SelectedDataPointIndex">
            <summary>
            Gets or sets the index value of current selected data point.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.DataPointSelectionEnabled">
            <summary>
            Gets or sets the value that indicates whether to allow the segment selection of the series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.SelectedDataPointColor">
            <summary>
            Gets or sets the color of the selected segment of the series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.Name">
            <summary>
            Gets or sets string value that used to identify series in chart. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.Color">
            <summary>
            Gets or sets color which used to fill the segments in series.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartSeries.strokeWidth">
            <summary>
            Gets or sets double value that indicates segment's stroke thickness in series. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.Alpha">
            <summary>
            Gets or sets float value that indicates series fill color's alpha value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.LegendIcon">
            <summary>
            Gets or sets ChartLegendIcon which represents the series icon in legend item.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.Label">
            <summary>
            Gets or sets the string that used to identify the series in legend item. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.TooltipEnabled">
            <summary>
            Gets or sets bool value which allows to renderer the tooltip. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.IsActualTransposed">
            <summary>
            Gets or sets the value that indicating whether series is transposed or not.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource">
            <summary>
            Gets or sets IList value which used to render series in UI. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath">
            <summary>
            Gets or sets IList value which used to render series in UI. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.ColorModel">
            <summary>
            Gets or sets ChartColorModel which used to modify series palette. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.XRange">
            <summary>
            Gets the xAxis range.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.YRange">
            <summary>
            Gets the yAxis range.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.Segments">
            <summary>
            Segments collection variable declarations.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartSeries.#ctor">
            <summary>
            Initializes a new instance of the ChartSeries class with default settings.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartSeries.InvalidateRender">
            <summary>
            Method used to render this series alone. 
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartSeries.OnAttachedToChart">
            <summary>
             Called when this series added to Chart layout.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartSeries.OnDetachedFromChart">
            <summary>
             Called when this series removed to Chart layout.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.VisibilityOnLegend">
            <summary>
            Gets or sets Visibility that represents the series visibility 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSeries.Visibility">
            <summary>
            Gets or sets Visibility that represents the series visibility in SfChart. 
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartSeries.Animate">
            <summary>
            Method used to animate the series. 
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartSeries.Dispose">
            <summary>
            Method used to dispose collection used in series. 
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.StackingBarSeries">
            <summary>
            Represents a stacked bar chart. To render this chart, create an instance of this class and add it to 
            <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set the required properties.
            </summary>
            <remarks>
            StackingBarSeries is the transposed version of StackingColumnSeries. Unlike other cartesian chart types,
            to plot StackingBarSeries, x-axis will be rendered vertically and y-axis will be rendered horizontally.
            Hence, it is not possible to plot other chart types along with StackingBarSeries. Multiple 
            StackingBarSeries can be added in a single <see cref="T:Com.Syncfusion.Charts.SfChart"/>.
            StackingBarSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and
            <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart. This series also requires x-axis
            and y-axis to be explicitly set either using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and 
            <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingBarSeries.Spacing">
            <summary>
            Gets or sets the spacing between the segments.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingBarSeries.CornerRadius">
            <summary>
            Gets or sets the value to draw rounded corners of the segments by using <see cref="T:Com.Syncfusion.Charts.ChartCornerRadius"/>.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingBarSeries.Width">
            <summary>
            Gets or sets the width of the segments.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingBarSeries.DataMarkerPosition">
            <summary>
            Gets or sets the data marker position.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingBarSeries.IsActualTransposed">
            <summary>
            Gets or sets the value that indicating wheather series is transposed or not.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingBarSeries.IsSideBySide">
            <summary>
            Gets or sets a value indicating whether ChartSeries added to area should be plotted side by side.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StackingBarSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Com.Syncfusion.Charts.StackingBarSeries"/> class.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StackingBarSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.StackingBarSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StackingBarSeries.CreateSegment(System.Double[])">
            <summary>
            Add the <see cref="T:Com.Syncfusion.Charts.BarSegment"/> into the Segments collection.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StackingBarSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.BarSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.SfChart.PointToValue(Com.Syncfusion.Charts.ChartAxis,Android.Graphics.PointF)">
            <summary>
            Method used to get exact axis value in hit point. 
            </summary>
            <param name="axis"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSelectionEvent.PreviousSelectedIndex">
            <summary>
            Gets the index of previously selected data point.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSelectionEvent.SelectedDataPointIndex">
            <summary>
            Gets the index of currently selected data point.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSelectionEvent.SelectedSeries">
            <summary>
            Gets the selected series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSelectionEvent.SelectedSegment">
            <summary>
            Gets the selected segment of the series.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartSeriesCollection">
            <summary>
            Represents a collection of <see cref="T:Com.Syncfusion.Charts.ChartSeries"/>.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.NumericalStripLinesCollection">
            <summary>
            Represents a collection of <see cref="T:Com.Syncfusion.Charts.NumericalStripLine"/>.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.DateTimeStripLinesCollection">
            <summary>
            Represents a collection of <see cref="T:Com.Syncfusion.Charts.DateTimeStripLine"/>.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartTechnicalIndicatorCollection">
            <summary>
            Represents a collection of <see cref="T:Com.Syncfusion.Charts.FinancialTechnicalIndicator"/>.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartBehaviorCollection">
            <summary>
            Represents a collection of <see cref="T:Com.Syncfusion.Charts.ChartBehavior"/>.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartAnnotationCollection">
            <summary>
            Represents a collection of <see cref="T:Com.Syncfusion.Charts.ChartAnnotation"/>.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartColorModel">
            <summary>
            ChartColorModel contains a number of predefined color palette and have custom brushes collection to populate a custom palette.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartColorModel.ColorPalette">
            <summary>
            Gets or sets the color model with defined palette.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartColorModel.CustomColors">
            <summary>
            Gets or sets the list of colors to be used as custom palette.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartColorModel.ActualCustomColors">
            <summary>
            Gets or sets the custom brushes to be used to paint the interiors of each segment in series.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartColorModel.#ctor(Com.Syncfusion.Charts.ChartColorPalette)">
            <summary>
            Called when instance created for ChartColorModel with single arguments
            </summary>
            <param name="palette"></param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartColorModel.GetColors(Com.Syncfusion.Charts.ChartColorPalette)">
            <summary>
            Returns the collection of brushes for specified pallete
            </summary>
            <param name="palette">ChartColorPalette</param>
            <returns>List of brushes</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartColorModel.GetMetroColors">
            <summary>
            Returns the brushes used for metro palette.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartColorModel.GetColor(System.Int32)">
            <summary>
            Returns the brush at the specified index for current palette
            </summary>
            <param name="colorIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartPolarAxisRenderer.CalculateAxisLabelPoint(System.Int32)">
            <summary>
            Method used to calculate x, y point to draw axis label
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAxisLabelStyle.CornerRadius">
            <summary>
            Gets or sets the corner radius to draw rounded corners for axis labels background by using <see cref="T:Com.Syncfusion.Charts.ChartCornerRadius"/>.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.BollingerBandIndicator">
            <summary>
            Represents a bollinger band indicator. To render this indicator, create an instance of this class and add
            it to <see cref="P:Com.Syncfusion.Charts.ChartBase.TechnicalIndicators"/> collection property and set the required properties.
            </summary>
            <remarks>
            This indicator can be associated to a financial series in <see cref="T:Com.Syncfusion.Charts.SfChart"/> by specifying the name
            of series using <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> property. If the <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> is specified, all the
            required properties such as  <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.High"/>, 
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Low"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Open"/> and <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Close"/> will be derived from the associated series. 
            In case, the SeriesName is not specified, all those required properties need to be explicitly specified in
            BollingerBandIndicator.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.BollingerBandIndicator.UpperLineColor">
            <summary>
            Gets or sets the color of the upper line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BollingerBandIndicator.LowerLineColor">
            <summary>
            Gets or sets the color of the lower line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BollingerBandIndicator.Period">
            <summary>
            Gets or sets the period for the indicator.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BollingerBandIndicator.StandardDeviation">
            <summary>
            Gets or sets the deviations for the upper and lower line.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.FinancialTechnicalIndicator">
            <summary>
            Serves as a base class for all types of technical indicators.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.High">
            <summary>
            Gets or sets the binding path for high values.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Low">
            <summary>
            Gets or sets the binding path for low values.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Open">
            <summary>
            Gets or sets the binding path for open values.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Close">
            <summary>
            Gets or sets the binding path for close values.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.XAxis">
            <summary>
            Gets or sets the additional horizontal axis for the indicator.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.YAxis">
            <summary>
            Gets or sets the additional vertical axis for the indicator.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName">
            <summary>
            Gets or sets the name of the series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SignalLineColor">
            <summary>
            Gets or sets the color of the signal line.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.MACDIndicator">
            <summary>
            Represents a MACD indicator. To render this indicator, create an 
            instance of this class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.TechnicalIndicators"/> 
            collection property and set the required properties.
            </summary>
            <remarks>
            This indicator can be associated to a financial series in 
            <see cref="T:Com.Syncfusion.Charts.SfChart"/> by specifying the name of series using
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> property. If the <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/>
            is specified, all the required properties such as  
            <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>,
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.High"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Low"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Open"/> and
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Close"/> will be derived from the associated series.
            In case, the SeriesName is not specified, all those required 
            properties need to be explicitly specified in MACDIndicator.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.MACDIndicator.LongPeriod">
            <summary>
            Gets or sets the long period for the indicator.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.MACDIndicator.ShortPeriod">
            <summary>
            Gets or sets the short period for the indicator.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.MACDIndicator.Trigger">
            <summary>
            Gets or sets the trigger period for the indicator.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.MACDIndicator.MACDLineColor">
            <summary>
            Gets or sets the color of the MACD Line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.MACDIndicator.HistogramColor">
            <summary>
            Gets or sets the color of the histogram.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.MACDIndicator.MACDType">
            <summary>
            Gets or sets the MACD type for the indicator.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.StochasticIndicator">
            <summary>
            Represents a stochastic indicator. To render this indicator, create an instance of this class and add it
            to <see cref="P:Com.Syncfusion.Charts.ChartBase.TechnicalIndicators"/> collection property and set the required properties.
            </summary>
            <remarks>
            This indicator can be associated to a financial series in <see cref="T:Com.Syncfusion.Charts.SfChart"/> by specifying the name of
            series using <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> property. If the <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> is specified, all the
            required properties such as  <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.High"/>,
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Low"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Open"/> and <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Close"/> will be derived from the associated series. 
            In case, the SeriesName is not specified, all those required properties need to be explicitly specified in
            RSIIndicator.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.StochasticIndicator.KPeriod">
            <summary>
            Gets or sets the k-period for the indicator.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StochasticIndicator.DPeriod">
            <summary>
            Gets or sets the d-period for the indicator.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StochasticIndicator.PeriodLineColor">
            <summary>
            Gets or sets the color of the period line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StochasticIndicator.UpperLineColor">
            <summary>
            Gets or sets the color of the upper line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StochasticIndicator.LowerLineColor">
            <summary>
            Gets or sets the color of the lower line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StochasticIndicator.Period">
            <summary>
            Gets or sets the period for the indicator.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartTitle.Measure(System.Drawing.RectangleF)">
            <summary>
            Methoud used to calculate bounds of title layout. 
            </summary>
            <param name="rectangleF"></param>
            <returns></returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartColor.CreateEmtpy">
            <summary>
            Creates the empty color.
            </summary>
            <returns>The empty.</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartColor.CreateTransparent">
            <summary>
            Creates the transparent color.
            </summary>
            <returns>The transparent.</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartColor.CreateColor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Values should be [0..1]
            </summary>
            <param name="a"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartColor.CreateColor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Values should be [0..1]
            </summary>
            <param name="a"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartColor.CreateColor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Values should be [0..255]
            </summary>
            <param name="a"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartColor.GetRGBA(Android.Graphics.Color,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Get the RGBA values
            </summary>
             <param name="color"></param>
            <param name="a"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartExtensionUtils.ToOADate(System.DateTime)">
            <summary>
            Converts the value of this instance to the equivalent OLE Automation date.
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartExtensionUtils.FromOADate(System.Double)">
            <summary>
            Returns a DateTime equivalent to the specified OLE Automation Date.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartMath.C_half">
            <summary>
            Initializes c_half
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartMath.GetRectByCenter(System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Gets the rect by center.
            </summary>
            <param name="center">The center.</param>
            <param name="size">The size value.</param>
            <returns>The Rect value</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartMath.GetRectByCenter(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Gets the rect by center.
            </summary>
            <param name="cx">The cx value.</param>
            <param name="cy">The cy value.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The Rect value</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartMath.GetCenter(System.Drawing.SizeF)">
            <summary>
            Gets the center.
            </summary>
            <param name="size">The size value.</param>
            <returns>The vector center value</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartMath.GetCenter(System.Drawing.RectangleF)">
            <summary>
            Gets the center.
            </summary>
            <param name="rect">The rect value.</param>
            <returns>The center point value</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartMath.SubtractThickness(System.Drawing.RectangleF,Com.Syncfusion.Charts.Thickness)">
            <summary>
            Subtracts the thickness.
            </summary>
            <param name="rect">The rect value.</param>
            <param name="thickness">The thickness.</param>
            <returns>The Rectangle</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartMath.SubtractThickness(System.Drawing.SizeF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Subtracts the thickness.
            </summary>
            <param name="size">The size value.</param>
            <param name="leftThickness">The thickness</param>
            <param name="rightThickness">The thickness</param>
            <param name="topThickness">The thickness</param>
            <param name="bottomThickness">The thickness</param>
            <returns>Returns the size</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartMath.AddThickness(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The Addthickness method
            </summary>
            <param name="rect">The Rect value</param>
            <param name="leftThickness">The thickness</param>
            <param name="rightThickness">The thickness</param>
            <param name="topThickness">The thickness</param>
            <param name="bottomThickness">The thickness</param>
            <returns>The rectangle</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartMath.AddThickness(System.Drawing.SizeF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The Addthickness method
            </summary>
            <param name="size">The size value</param>
            <param name="leftThickness">The thickness</param>
            <param name="rightThickness">The thickness</param>
            <param name="topThickness">The thickness</param>
            <param name="bottomThickness">The thickness</param>
            <returns>The rectangle</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartMath.CheckSize(System.Drawing.SizeF)">
            <summary>
            Checks the members of size by infinity.
            </summary>
            <param name="size">The size value.</param>
            <returns>Returns the size</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartMath.MinMax(System.Double[])">
            <summary>
            Gets minimal and maximal value from parameters.
            </summary>
            <param name="values">The parameters</param>
            <returns>The minimal and maximal value.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartSegmentPaint">
            <summary>
            ChartSegmentPaint class used to get segment drawing attributes. 
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartSegmentPaint.#ctor(Com.Syncfusion.Charts.ChartSegment)">
            <summary>
            Initialize ChartSegmentPaint segment instance. 
            </summary>
            <param name="segment"></param>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSegmentPaint.Color">
            <summary>
            Gets segment fill color. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSegmentPaint.StrokeWidth">
            <summary>
            Gets segment border thickness. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSegmentPaint.Stroke">
            <summary>
            Gets segment border color. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSegmentPaint.FillPaint">
            <summary>
            Gets segment fill paint. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartSegmentPaint.StrokePaint">
            <summary>
            Gets segment stroke paint. 
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.DoubleRange">
            <summary>
            Defines a custom DoubleRange data type for<see cref="T:Com.Syncfusion.Charts.SfChart"/> library.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DoubleRange.c_empty">
            <summary>
            Initializes c_empty
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DoubleRange.m_start">
            <summary>
            Initializes m_start
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DoubleRange.m_end">
            <summary>
            Initializes m_end
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DoubleRange.Empty">
            <summary>
            Gets the Empty value
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DoubleRange.Start">
            <summary>
            Gets the Start value
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DoubleRange.End">
            <summary>
            Gets the End value
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DoubleRange.Delta">
            <summary>
            Gets the Delta value
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DoubleRange.Median">
            <summary>
            Gets the median.
            </summary>
            <value>The median.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.DoubleRange.IsEmpty">
            <summary>
            Gets a value indicating whether IsEmpty 
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Com.Syncfusion.Charts.DoubleRange"/> struct.
            </summary>
            <param name="start">The start value.</param>
            <param name="end">The end value.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.op_Addition(Com.Syncfusion.Charts.DoubleRange,Com.Syncfusion.Charts.DoubleRange)">
            <summary>
            Union operator
            </summary>
            <param name="leftRange">First double range</param>
            <param name="rightRange">Second double range</param>
            <returns>The Union value</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.op_Addition(Com.Syncfusion.Charts.DoubleRange,System.Double)">
            <summary>
            Union operator
            </summary>
            <param name="range">First double range</param>
            <param name="value">Second double range</param>
            <returns>The Union value</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.op_GreaterThan(Com.Syncfusion.Charts.DoubleRange,System.Double)">
            <summary>
            The operator
            </summary>
            <param name="range">The DoubleRange </param>
            <param name="value">The double value</param>
            <returns>The range value</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.op_GreaterThan(Com.Syncfusion.Charts.DoubleRange,Com.Syncfusion.Charts.DoubleRange)">
            <summary>
            Return bool value from the given DoubleRange
            </summary>
            <param name="range"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.op_LessThan(Com.Syncfusion.Charts.DoubleRange,Com.Syncfusion.Charts.DoubleRange)">
            <summary>
            return Bool value from doublerange
            </summary>
            <param name="range"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.op_LessThan(Com.Syncfusion.Charts.DoubleRange,System.Double)">
            <summary>
            The operator
            </summary>
            <param name="range">The DoubleRange </param>
            <param name="value">The double value</param>
            <returns>The range value</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.op_Equality(Com.Syncfusion.Charts.DoubleRange,Com.Syncfusion.Charts.DoubleRange)">
            <summary>
            The operator method
            </summary>
            <param name="leftRange">The left DoubleRange</param>
            <param name="rightRange">The right DoubleRange</param>
            <returns>The left range</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.op_Inequality(Com.Syncfusion.Charts.DoubleRange,Com.Syncfusion.Charts.DoubleRange)">
            <summary>
            The operator method
            </summary>
            <param name="leftRange">The left range</param>
            <param name="rightRange">The right range</param>
            <returns>The inverse left range</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.Union(System.Double[])">
            <summary>
            Create range by array of double.
            </summary>
            <param name="values">The values</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.Union(Com.Syncfusion.Charts.DoubleRange,Com.Syncfusion.Charts.DoubleRange)">
            <summary>
            Unions the specified left range with right range.
            </summary>
            <param name="leftRange">The left range.</param>
            <param name="rightRange">The right range.</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.Union(Com.Syncfusion.Charts.DoubleRange,System.Double)">
            <summary>
            Unions the specified range with value.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.Scale(Com.Syncfusion.Charts.DoubleRange,System.Double)">
            <summary>
            Scales the specified range by value.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.Offset(Com.Syncfusion.Charts.DoubleRange,System.Double)">
            <summary>
            Offsets the specified range by value.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>The DoubleRange</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.Exclude(Com.Syncfusion.Charts.DoubleRange,Com.Syncfusion.Charts.DoubleRange,Com.Syncfusion.Charts.DoubleRange@,Com.Syncfusion.Charts.DoubleRange@)">
            <summary>
            Excludes the specified range.
            </summary>
            <param name="range">The range.</param>
            <param name="excluder">The excluder.</param>
            <param name="leftRange">The left range.</param>
            <param name="rightRange">The right range.</param>
            <returns>True if empty</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.Intersects(Com.Syncfusion.Charts.DoubleRange)">
            <summary>
            Checks whether intersection region of two ranges is not empty.
            </summary>
            <param name="range">the DoubleRange</param>
            <returns><b>true</b> if  intersection is not empty</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.Intersects(System.Double,System.Double)">
            <summary>
            Checks whether intersection region of two ranges is not empty.
            </summary>
            <param name="start">The start value</param>
            <param name="end">The end value</param>
            <returns> true if  intersection is not empty</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.Inside(System.Double)">
            <summary>
            Checks whether the given value is inside the axis range
            </summary>
            <param name="value">The value.</param>
            <returns>True if value is inside</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.Inside(Com.Syncfusion.Charts.DoubleRange)">
            <summary>
            Checks whether the given range is inside the axis range
            </summary>
            <param name="range">The range.</param>
            <returns>True is range is inside</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.DoubleRange.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartCornerRadius">
            <summary>
            Represents the radii of a rectangle's corners.
            </summary>
            <remarks>
            This struct has four properties, TopLeft, TopRight, BottomLeft, and BottomRight, corresponding to the individual corners of the rectangle. Each is a double that can be set independently of the others.
            The radii cannot be negative.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartCornerRadius.TopLeft">
            <summary>
            Gets or sets the radius of the top-left corner.
            </summary>
            <value>Double value that specifies the radius of the top left corner.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartCornerRadius.TopRight">
            <summary>
            Gets or sets the radius of the top-right corner.
            </summary>
            <value>Double value that specifies the radius of the top right corner.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartCornerRadius.BottomLeft">
            <summary>
            Gets or sets the radius of the bottom-left corner.
            </summary>
            <value>Double value that specifies the radius of the bottom left corner.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartCornerRadius.BottomRight">
            <summary>
            Gets or sets the radius of the bottom-right corner.
            </summary>
            <value>Double value that specifies the radius of the bottom right corner.</value>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartCornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfChart.iOS.CornerRadius"/> struct with the specified radius values for each corner of the rectangle.
            </summary>
            <param name="topLeft">Double value that specifies the radius of the top left corner.</param>
            <param name="topRight">Double value that specifies the radius of the top right corner.</param>
            <param name="bottomLeft">Double value that specifies the radius of the bottom left corner.</param>
            <param name="bottomRight">Double value that specifies the radius of the bottom right corner.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartCornerRadius.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.SfChart.iOS.CornerRadius"/> struct with a specified uniform radius value for every corner or the rectangle.
            </summary>
            <param name="cornerRadius">Corner radius.</param>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartColorPalette">
            <summary>
            Represents the different types of color palette available in <see cref="T:Com.Syncfusion.Charts.SfChart"/> library.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartColorPalette.None">
            <summary>
            No palette will be set
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartColorPalette.Metro">
            <summary>
            Metro palette will be set.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartColorPalette.TomatoSpectrum">
            <summary>
            TomatoSpectrum palette will be set.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartColorPalette.Pineapple">
            <summary>
            Pineapple palette will be set. 
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartColorPalette.Custom">
            <summary>
            Custom palette will be set, and color values will be taken from <see cref="P:Com.Syncfusion.Charts.ChartColorModel.CustomColors"/> collection.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.CircularSeriesDataMarkerPosition">
            <summary>
            Represents the different types of data marker position available for circular series in <see cref="T:Com.Syncfusion.Charts.SfChart"/> library.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartPyramidMode">
            <summary>
            Represents the different types of pyramid mode available for triangular series in <see cref="T:Com.Syncfusion.Charts.SfChart"/> library.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartAutoScrollingMode">
            <summary>
            Represents auto scrolling delta mode of axis.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartPolarAngle">
            <summary>
            Represents the chart polar and radar axis start angle.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartPolarAngle.Rotate0">
            <summary>
            Indicates chart polar and radar angle axis start position at 0 degree angle. 
            </summary>
            
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartPolarAngle.Rotate90">
             <summary>
            Indicates chart polar and radar angle axis start position at 90 degree angle. 
             </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartPolarAngle.Rotate180">
            <summary>
            Indicates chart polar and radar angle axis start position at 180 degree angle. 
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartPolarAngle.Rotate270">
            <summary>
            Indicates chart polar and radar angle axis start position at 270 degree angle. 
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.AxisElementPosition">
            <summary>
            Represents axis elements position in <see cref="T:Com.Syncfusion.Charts.ChartAxis"/> elements panel.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.AxisElementPosition.Outside">
            <summary>
            Positions the elements below the axis line.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.AxisElementPosition.Inside">
            <summary>
            Positions the elements above the axis line.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartLegendOverflowMode">
            <summary>
            Represents overflow action in legend items panel. 
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartLegendOverflowMode.Wrap">
            <summary>
            Wrap the overflow items in to next row of chart legend items layout. 
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartLegendOverflowMode.Scroll">
            <summary>
            Use scrollbar to view overflow items in legend. 
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.DateTimeIntervalType">
            <summary>
            A date time interval.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeIntervalType.Auto">
            <summary>
            Automatically determine interval.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeIntervalType.Milliseconds">
            <summary>
            Interval type is milliseconds.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeIntervalType.Seconds">
            <summary>
            Interval type is seconds.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeIntervalType.Minutes">
            <summary>
            Interval type is minutes.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeIntervalType.Hours">
            <summary>
            Interval type is hours.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeIntervalType.Days">
            <summary>
            Interval type is days.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeIntervalType.Months">
            <summary>
            Interval type is months.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeIntervalType.Years">
            <summary>
            Interval type is years.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeDeltaType.Auto">
            <summary>
            Automatically determine interval.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeDeltaType.Milliseconds">
            <summary>
            Interval type is milliseconds.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeDeltaType.Seconds">
            <summary>
            Interval type is seconds.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeDeltaType.Minutes">
            <summary>
            Interval type is minutes.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeDeltaType.Hours">
            <summary>
            Interval type is hours.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeDeltaType.Days">
            <summary>
            Interval type is days.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeDeltaType.Months">
            <summary>
            Interval type is months.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DateTimeDeltaType.Years">
            <summary>
            Interval type is years.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ConnectorType">
            <summary>
            Represents the style of connector line
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ConnectorType.Line">
            <summary>
            This draws a solid line as connector line
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ConnectorType.Bezier">
            <summary>
            This draws a Bezier curve as connector line
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.LabelContent">
            <summary>
            Represents the label content of the data marker label
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.LabelContent.YValue">
            <summary>
            Indicates that label should contain Y value of series point
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.LabelContent.Percentage">
            <summary>
            Indicates that label should contain percentage value of series point among other points
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.DataMarkerType">
            <summary>
            Represents the icon for the data marker
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerType.Ellipse">
            <summary>
            Renders Ellipse symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerType.Cross">
            <summary>
            Renders Cross symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerType.Diamond">
            <summary>
            Renders Diamond symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerType.Hexagon">
            <summary>
            Renders Hexagon symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerType.HorizontalLine">
            <summary>
            Renders HorizontalLine symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerType.InvertedTriangle">
            <summary>
            Renders InvertedTriangle symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerType.Pentagon">
            <summary>
            Renders Pentagon symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerType.Plus">
            <summary>
            Renders Plus symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerType.Square">
            <summary>
            Renders Square symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerType.Triangle">
            <summary>
            Renders Traingle symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerType.VerticalLine">
            <summary>
            Renders VerticalLine symbol
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.DataMarkerPosition">
            <summary>
            Represents the <see cref="T:Com.Syncfusion.Charts.ChartDataMarker"/>position. 
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerPosition.Top">
            <summary>
            Marker will be positioned on top of the series
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerPosition.Bottom">
            <summary>
            Marker will be positioned on bottom of the series
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerPosition.Center">
            <summary>
            Marker will be positioned on middle of the series
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.DataMarkerLabelPosition">
            <summary>
            Represents the <see cref="T:Com.Syncfusion.Charts.ChartDataMarker"/> label position. 
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerLabelPosition.Auto">
            <summary>
            Label position will be decided based on series types
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerLabelPosition.Inner">
            <summary>
            Label will be positioned inside
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerLabelPosition.Outer">
            <summary>
            Label will be positioned outer
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.DataMarkerLabelPosition.Center">
            <summary>
            Label will be positioned center
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.MarkerType">
            <summary>
            Represents the icon for the data marker
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.MarkerType.Ellipse">
            <summary>
            Renders Ellipse symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.MarkerType.Cross">
            <summary>
            Renders Cross symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.MarkerType.Diamond">
            <summary>
            Renders Diamond symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.MarkerType.Hexagon">
            <summary>
            Renders Hexagon symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.MarkerType.HorizontalLine">
            <summary>
            Renders HorizontalLine symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.MarkerType.InvertedTriangle">
            <summary>
            Renders InvertedTriangle symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.MarkerType.Pentagon">
            <summary>
            Renders Pentagon symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.MarkerType.Plus">
            <summary>
            Renders Plus symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.MarkerType.Square">
            <summary>
            Renders Square symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.MarkerType.Triangle">
            <summary>
            Renders Traingle symbol
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.MarkerType.VerticalLine">
            <summary>
            Renders VerticalLine symbol
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartValueType">
            <summary>
            Specifies the different values that are natively used.
            </summary>
            <seealso cref="T:Com.Syncfusion.Charts.ChartAxis"/>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartValueType.Double">
            <summary>
             <see cref="F:Com.Syncfusion.Charts.ChartValueType.Double"/> value
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartValueType.DateTime">
            <summary>
             <see cref="F:Com.Syncfusion.Charts.ChartValueType.DateTime"/> value
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartValueType.String">
            <summary>
              <see cref="F:Com.Syncfusion.Charts.ChartValueType.String"/> value
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartValueType.TimeSpan">
            <summary>
              <see cref="F:Com.Syncfusion.Charts.ChartValueType.TimeSpan"/> value
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartValueType.Logarithmic">
            <summary>
              Logarithmic value
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.SplineType">
            <summary>
            Specifies the type of spline.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartLineCap">
            <summary>
            Represents the type of cap for line annotation.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartLineCap.Arrow">
            <summary>
            To render the line annotation with arrow.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartLineCap.None">
            <summary>
            To render the line annotation without arrow.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartCoordinateUnit">
            <summary>
            Specifies the annotation positioned with axis units or pixel units.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartCoordinateUnit.Axis">
            <summary>
            Annotation positioned with axis units.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartCoordinateUnit.Pixels">
            <summary>
            Annotation positioned with pixel units.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartAnnotationAlignment">
            <summary>
            Specifies the annotation label alignment.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartAnnotationAlignment.Start">
            <summary>
            Label positioned at start.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartAnnotationAlignment.Center">
            <summary>
            Label positioned at center.
            </summary>
        </member>
        <member name="F:Com.Syncfusion.Charts.ChartAnnotationAlignment.End">
            <summary>
            Label positioned at end.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartDataMarker">
            <summary>
            Represents the data markers in chart series. Data markers appearance can be 
            customized using this class.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarker.ConnectorLineStyle">
            <summary>
            Gets or sets the options for customizing the data marker's connector line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarker.LabelStyle">
            <summary>
            Gets or sets the options for customizing the data marker's label.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarker.LabelContent">
            <summary>
            Gets or sets an option that determines the content to be displayed in the data marker label.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarker.MarkerType">
            <summary>
            Gets or sets the type of the marker.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarker.MarkerStrokeWidth">
            <summary>
            Gets or sets the width of the data marker border line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarker.MarkerStrokeColor">
            <summary>
            Gets or sets the border color of the data marker symbol.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarker.MarkerColor">
            <summary>
            Gets or sets the color of the data marker.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarker.MarkerHeight">
            <summary>
            Gets or sets the height of the data marker.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarker.MarkerWidth">
            <summary>
            Gets or sets the width of the data marker.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarker.ShowLabel">
            <summary>
            Gets or sets the value that indicates whether to show label for the data marker.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarker.ShowMarker">
            <summary>
            Gets or sets the value that indicates whether to show marker for the data marker.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarker.UseSeriesPalette">
            <summary>
            Gets or sets the value that indicates whether to set the series color to the data marker's label background.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarkerLabelStyle.LabelPosition">
            <summary>
            Gets or sets the position of the data marker label.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarkerLabelStyle.LabelPadding">
            <summary>
            Gets or sets the padding for the data marker label.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarkerLabelStyle.OffsetX">
            <summary>
            Gets or sets the horizontal offset for the data marker label.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarkerLabelStyle.OffsetY">
            <summary>
            Gets or sets the vertical offset for the data marker label.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartDataMarkerLabelStyle.Angle">
            <summary>
            Gets or sets the rotation angle for the data marker label.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ConnectorLineStyle.ConnectorHeight">
            <summary>
            Gets or sets the height of the connector line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ConnectorLineStyle.ConnectorRotationAngle">
            <summary>
            Gets or sets the rotation angle of the connector line.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.DataMarkerLabel">
            <summary>
            This class represents the data marker label implementation.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DataMarkerLabel.XPosition">
            <summary>
            Gets the x-position of the marker label.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DataMarkerLabel.YPosition">
            <summary>
            Gets the y-position of the marker label.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DataMarkerLabel.Label">
            <summary>
            Gets or sets the label.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DataMarkerLabel.BackgroundColor">
            <summary>
            Gets or sets the background color of the data marker label.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DataMarkerLabel.Index">
            <summary>
            Gets the index of the label.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DataMarkerLabel.View">
            <summary>
            Gets or sets the view.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartZoomPanBehavior.Reset">
            Used to reset all axis zoom level.
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartZoomPanBehavior.ZoomIn">
            Used to zoom in chart
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartZoomPanBehavior.ZoomOut">
            Used to zoom out chart
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartZoomPanBehavior.Zoom(System.Single)">
            Used to zoom in chart for an given ZoomFactor
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartZoomPanBehavior.Zoom(Android.Graphics.RectF)">
            Used to zoom in chart for an given rectangle.
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartZoomPanBehavior.ZoomToFactor(Com.Syncfusion.Charts.ChartAxis,System.Single,System.Single)">
            Used to zoom in the given axis for an given ZoomPosition and ZoomFactor
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartZoomPanBehavior.ZoomByRange(Com.Syncfusion.Charts.ChartAxis,System.Double,System.Double)">
            Used to zoom in the given axis for the given range
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartZoomPanBehavior.ZoomByRange(Com.Syncfusion.Charts.DateTimeAxis,System.DateTime,System.DateTime)">
            Used to zoom in the given axis for the given date time range
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartStripLine">
            <summary>
            Serves as a base class for all types of strip line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartStripLine.Segmented">
            <summary>
            Gets or sets the value that indicates whether the strip line is segmented or not.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartStripLine.PixelWidth">
            <summary>
            Gets or sets the value that indicates whether the value specified in <c>Width</c> property should be considered as screen points or axis range.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartStripLine.Text">
            <summary>
            Gets or sets the text to be displayed on the strip line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartStripLine.LabelStyle">
            <summary>
            Gets the customized style for the axis labels.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartStripLine.StrokeWidth">
            <summary>
            Gets or sets the width of the strip line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartStripLine.Visibility">
            <summary>
            Gets or sets the value that indicates whether the strip line is visible in the axis.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartStripLine.SegmentStart">
            <summary>
            Gets or sets the start value for the strip line segmentation. It can be a double, date time or logarithmic value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartStripLine.SegmentEnd">
            <summary>
            Gets or sets the end value for the strip line segmentation. It can be a double, date time or logarithmic value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartStripLine.SegmentAxisName">
            <summary>
             Gets or sets the name of the segment axis for the strip line. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartStripLine.Width">
            <summary>
            Gets or sets the width of the strip line, which is considered as screen points or axis range, based on <c>IsPixedWidth</c> property.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartStripLine.RepeatEvery">
            <summary>
            Gets or sets the frequency of the strip lines. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartStripLine.StrokeColor">
            <summary>
            Gets or sets the stroke color of the strip line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartStripLine.FillColor">
            <summary>
             Gets or sets the color of the strip line. 
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartTrackballBehavior.GetAxisView(System.String,Com.Syncfusion.Charts.ChartAxis)">
            <summary>
            Get a view for trackball label of the axis that displays the data at the specified position of the data point.
            You can either create a View manually or inflate it from an XML layout file.
            </summary>
            <returns>The axis view.</returns>
            <param name="p0">P0 is label of corresponding axis value.</param>
            <param name="p1">P1 is corresponding axis</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartTrackballMarkerStyle.ShowMarker">
            <summary>
            Gets or sets the value that indicates whether to show marker for the data marker.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartTrackballMarkerStyle.StrokeColor">
            <summary>
            Gets or sets the color for the marker stroke.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartTrackballMarkerStyle.Color">
            <summary>
            Gets or sets the color for the marker.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartTrackballMarkerStyle.Height">
            <summary>
            Gets or sets the height for the marker.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartTrackballMarkerStyle.Width">
            <summary>
            Gets or sets the width for the marker.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartTrackballMarkerStyle.StrokeWidth">
            <summary>
            Gets or sets the width for the marker stroke.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.DateTimeStripLine">
            <summary>
            This class can be used to render strip lines using DateTime values.
            This should be used with <see cref="T:Com.Syncfusion.Charts.DateTimeAxis"/>.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DateTimeStripLine.RepeatEveryType">
            <summary>
             Gets or sets the date time unit of the value specified in the <c>RepeatEvery</c> property.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.DateTimeStripLine.WidthType">
            <summary>
            Gets or sets the date time unit of the value specified in the <c>Width</c> property.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.NumericalStripLine">
            <summary>
            This class can be used to render strip lines using number values. 
            This should be used with <see cref="T:Com.Syncfusion.Charts.NumericalAxis"/>, 
            <see cref="T:Com.Syncfusion.Charts.LogarithmicAxis"/> and <see cref="T:Com.Syncfusion.Charts.CategoryAxis"/>.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.NumericalStripLine.Start">
            <summary>
            Gets or sets the axis value that represents, from where the strip line should start in axis.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.NumericalStripLine.RepeatUntil">
            <summary>
             Gets or sets the axis value that determines till where the strip line has to be repeated in axis.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.AverageTrueIndicator">
            <summary>
            Represents an average true indicator. To render this indicator, create an instance of this class and add 
            it to <see cref="P:Com.Syncfusion.Charts.ChartBase.TechnicalIndicators"/> collection property and set the required properties.
            </summary>
            <remarks>
            This indicator can be associated to a financial series in <see cref="T:Com.Syncfusion.Charts.SfChart"/> by specifying the name
            of series using <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> property. If the <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> is specified, all the
            required properties such as  <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.High"/>,
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Low"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Open"/> and <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Close"/> will be derived from the associated series.
            In case, the SeriesName is not specified, all those required properties need to be explicitly specified in
            AverageTrueIndicator.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.AverageTrueIndicator.Period">
            <summary>
            Gets or sets the period for the indicator.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.AccumulationDistributionIndicator">
            <summary>
            Represents an accumulation distribution indicator. To render this indicator, create an instance of this 
            class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.TechnicalIndicators"/> collection property and set the required
            properties.
            </summary>
            <remarks>
            This indicator can be associated to a financial series in <see cref="T:Com.Syncfusion.Charts.SfChart"/> by specifying the name
            of series using <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> property. If the <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> is specified, all the 
            required properties such as  <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.High"/>,
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Low"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Open"/> and <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Close"/> will be derived from the associated series. 
            In case, the SeriesName is not specified, all those required properties need to be explicitly specified in
            AccumulationDistributionIndicator.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.AccumulationDistributionIndicator.Volume">
            <summary>
            Gets or sets the binding path for the volume.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ExponentialMovingAverageIndicator">
            <summary>
            Represents an exponential moving average indicator. To render this indicator, create an instance of this
            class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.TechnicalIndicators"/> collection property and set the required
            properties.
            </summary>
            <remarks>
            This indicator can be associated to a financial series in <see cref="T:Com.Syncfusion.Charts.SfChart"/> by specifying the name of
            series using <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> property. If the <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> is specified, all the
            required properties such as  <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.High"/>,
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Low"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Open"/> and <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Close"/> will be derived from the associated series. 
            In case, the SeriesName is not specified, all those required properties need to be explicitly specified in
            ExponentialMovingAverageIndicator.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.ExponentialMovingAverageIndicator.Period">
            <summary>
            Gets or sets the period for the indicator.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.MomentumIndicator">
            <summary>
            Represents a momentum indicator. To render this indicator, create an 
            instance of this class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.TechnicalIndicators"/> 
            collection property and set the required properties.
            </summary>
            <remarks>
            This indicator can be associated to a financial series in
            <see cref="T:Com.Syncfusion.Charts.SfChart"/> by specifying the name of series using
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> property. If the <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/>
            is specified, all the required properties such as
            <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, 
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.High"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Low"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Open"/> and
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Close"/> will be derived from the associated series.
            In case, the SeriesName is not specified, all those required 
            properties need to be explicitly specified in MomentumIndicator.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.MomentumIndicator.UpperLineColor">
            <summary>
            Gets or sets the color of the upper line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.MomentumIndicator.Period">
            <summary>
            Gets or sets the period for the indicator.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.RSIIndicator">
            <summary>
            Represents a RSI indicator. To render this indicator, create an 
            instance of this class and add it to
            <see cref="P:Com.Syncfusion.Charts.ChartBase.TechnicalIndicators"/> collection property 
            and set the required properties.
            </summary>
            <remarks>
            This indicator can be associated to a financial series in
            <see cref="T:Com.Syncfusion.Charts.SfChart"/> by specifying the name of series using 
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> property. If the <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/>
            is specified, all the required properties such as  
            <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, 
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.High"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Low"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Open"/> and
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Close"/> will be derived from the associated series.
            In case, the SeriesName is not specified, all those required
            properties need to be explicitly specified in RSIIndicator.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.RSIIndicator.UpperLineColor">
            <summary>
            Gets or sets the color of the upper line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RSIIndicator.LowerLineColor">
            <summary>
            Gets or sets the color of the lower line.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RSIIndicator.Period">
            <summary>
            Gets or sets the period for the indicator.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.SimpleMovingAverageIndicator">
            <summary>
            Represents a simple moving average indicator. To render this indicator, create an instance of this 
            class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.TechnicalIndicators"/> collection property and set the required
            properties.
            </summary>
            <remarks>
            This indicator can be associated to a financial series in <see cref="T:Com.Syncfusion.Charts.SfChart"/> by specifying the 
            name of series using <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> property. If the <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> is specified,
            all the required properties such as  <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, 
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.High"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Low"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Open"/> and <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Close"/> will be derived from
            the associated series. In case, the SeriesName is not specified, all those required properties need to
            be explicitly specified in RSIIndicator.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.SimpleMovingAverageIndicator.Period">
            <summary>
            Gets or sets the period for the indicator.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.TriangularMovingAverageIndicator">
            <summary>
            Represents a triangular moving average indicator. To render this indicator, create an instance of this
            class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.TechnicalIndicators"/> collection property and set the required 
            properties.
            </summary>
            <remarks>
            This indicator can be associated to a financial series in <see cref="T:Com.Syncfusion.Charts.SfChart"/> by specifying the name
            of series using <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> property. If the <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.SeriesName"/> is specified, all the
            required properties such as  <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.High"/>,
            <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Low"/>, <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Open"/> and <see cref="P:Com.Syncfusion.Charts.FinancialTechnicalIndicator.Close"/> will be derived from the associated series.
            In case, the SeriesName is not specified, all those required properties need to be explicitly specified in
            RSIIndicator.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.TriangularMovingAverageIndicator.Period">
            <summary>
            Gets or sets the period for the indicator.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.SplineSegment.X1">
            <summary>
            Gets or sets the x1 value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.SplineSegment.Y1">
            <summary>
            Gets or sets the y1 value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.SplineSegment.X2">
            <summary>
            Gets or sets the x2 value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.SplineSegment.Y2">
            <summary>
            Gets or sets the y2 value.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.SplineSegment.OnLayout">
            <summary>
            Update the segment positions when the layout was updated.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.SplineSegment.SetData(System.Double[])">
            <summary>
            Sets the values for this segment.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.SplineSegment.OnDraw(Com.Syncfusion.Charts.Drawing)">
            <summary>
            Draw the segment based on the segment position.
            </summary>
            <param name="drawing">The drawing context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.SplineAreaSegment.OnLayout">
            <summary>
            Update the segment positions when the layout was updated.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.SplineAreaSegment.SetData(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Collections.IList)">
            <summary>
            Sets the values for this segment.
            </summary>
            <param name="xValues">The x values.</param>
            <param name="yValues">The y values.</param>
            <param name="startControlPointsX">The StartControlPointsX values.</param>
            <param name="startControlPointsY">The StartControlPointsY values.</param>
            <param name="endControlPointsX">The EndControlPointsX values.</param>
            <param name="endControlPointsY">The EndControlPointsY values.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.SplineAreaSegment.UpdateRange">
            <summary>
            Updates the range with control points
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.SplineAreaSegment.CalculateInteriorPoints">
            <summary>
            Calculate interior points.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.FastReflectionCaches">
            <summary>
            Contains members to hold PropertyInfo.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ChartDataUtils">
            <summary>
            Contains utility methods to manipulate data.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartDataUtils.GetObjectByPath(System.Object,System.String)">
            <summary>
             Gets the object by path.
             </summary>
             <param name="obj">The obj value.</param>
             <param name="path">The path value.</param>
             <returns>Returns the object</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartDataUtils.ConvertPathObjectToPositionValue(System.Object)">
            <summary>
            Converts to double.
            </summary>
            <param name="obj">The obj value.</param>
            <returns>The double value</returns>
            <seealso cref="T:Com.Syncfusion.Charts.ChartDataUtils"/>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartDataUtils.GetPositionalPathValue(System.Object,System.String)">
            <summary>
            Gets the double by path.
            </summary>
            <param name="obj">The obj value.</param>
            <param name="path">The path value.</param>
            <returns>The double value</returns>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartDataUtils.GetPropertyInfo(System.Object,System.String)">
            <summary>
            Gets the property from the specified object.
            </summary>
            <param name="obj">Object to retrieve a property.</param>
            <param name="path">Property name</param>
            <returns></returns>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartBase.Title">
            <summary>
            Gets the title for the chart.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartBase.ColorModel">
            <summary>
            Gets or sets the palette collection to fill the series interior. By default, it is Metro.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartBase.SideBySideSeriesPlacement">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Com.Syncfusion.Charts.ChartBase"/> series should be placed side by side.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartBase.Series">
            <summary>
            Gets or sets the collection of series to be added to the chart.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartBase.Annotations">
            <summary>
            Gets or sets the collection of annotations to be added to the chart.
            </summary>
            <value>The annotations.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartBase.TechnicalIndicators">
            <summary>
            Gets or sets the collection of indicators to be added to the chart.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis">
            <summary>
            Gets or sets the horizontal axis defined for the chart.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis">
            <summary>
            Gets or sets the vertical axis defined for the chart.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartBase.Behaviors">
            <summary>
            Gets or sets the collection of behaviors to be added to the chart.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.AccumulationSeries">
            <summary>
            Serves as a base class for all triangular and circular series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.AccumulationSeries.YValues">
            <summary>
            Gets or sets the y values.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.AccumulationSeries.YBindingPath">
            <summary>
            Gets or sets the binding path in items source.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.AccumulationSeries.StrokeColor">
            <summary>
            Gets or sets color that used to customize segment border color. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.AccumulationSeries.ExplodeIndex">
            <summary>
            Gets or sets int value which indicates explode index of series. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.AccumulationSeries.ExplodeAll">
            <summary>
            Gets or sets bool value which explode all segments in series. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.AccumulationSeries.ExplodableOnTouch">
            <summary>
            Gets or sets the value that indicates whether to explode the segment on touch. 
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.AreaSeries">
            <summary>
            Represents an area chart. To render area chart, create an instance of this 
            class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and 
            set the required properties.
            </summary>
            <remarks>
            AreaSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> 
            and <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart. 
            This series also requires x-axis and y-axis to be explicitly set either 
            using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/>
            or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.AreaSeries.StrokeColor">
            <summary>
            Gets or sets the color for the series stroke.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.AreaSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.AreaSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.AreaSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.AreaSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.BarSeries">
            <summary>
            Represents a bar chart. To render bar chart, create an instance of this class
            and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set the 
            required properties.
            </summary>
            <remarks>
            BarSeries is the transposed version of ColumnSeries. Unlike other cartesian 
            chart types, to plot BarSeries, x-axis will be rendered vertically and y-axis
            will be rendered horizontally. Hence, it is not possible to plot other chart 
            types along with BarSeries. Multiple BarSeries can be added in a single 
            <see cref="T:Com.Syncfusion.Charts.SfChart"/>. 
            BarSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref = "P:Com.Syncfusion.Charts.ChartSeries.XBindingPath" />
            and <see cref= "P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart.
            This series also requires x-axis and y-axis to be explicitly set either using
            <see cref = "P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> 
            or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.BarSeries.StrokeColor">
            <summary>
            Gets or sets the color for the series stroke.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BarSeries.CornerRadius">
            <summary>
            Gets or sets the value to draw rounded corners of the segments by using <see cref="T:Com.Syncfusion.Charts.ChartCornerRadius"/>.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BarSeries.Spacing">
            <summary>
            Gets or sets the spacing between the segments.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BarSeries.Width">
            <summary>
            Gets or sets the width of the segments.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BarSeries.DataMarkerPosition">
            <summary>
            Gets or sets the position of the data markers in series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BarSeries.IsSideBySide">
            <summary>
            Gets or sets a value indicating whether ChartSeries added to area should be plotted side by side.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BarSeries.IsActualTransposed">
            <summary>
            Gets or sets the value that indicating wheather series is transposed or not.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.BarSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Com.Syncfusion.Charts.BarSeries"/> class.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.BarSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.BarSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.BarSeries.CreateSegment(System.Double[])">
            <summary>
            Add the <see cref="T:Com.Syncfusion.Charts.BarSegment"/> into the Segments collection.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.BarSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.BarSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.BubbleSeries">
            <summary>
            Represents a bubble chart. To render bubble chart, create an instance of this 
            class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set 
            the required properties.
            </summary>
            <remarks>
            BubbleSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, 
            <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> and <see cref="P:Com.Syncfusion.Charts.BubbleSeries.Size"/> properties to be set to 
            render the chart. This series also requires x-axis and y-axis to be explicitly
            set either using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and  
            <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> 
            and <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.BubbleSeries.MinimumRadius">
            <summary>
            Gets or sets the minimum radius of the bubble.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BubbleSeries.MaximumRadius">
            <summary>
            Gets or sets the maximum radius of the bubble.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BubbleSeries.StrokeColor">
            <summary>
            Gets or sets the color for the series stroke.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BubbleSeries.SizeValues">
            <summary>
            Gets or sets the bubble size.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.BubbleSeries.Size">
            <summary>
            Gets or sets the binding path in items source.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.BubbleSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Com.Syncfusion.Charts.BubbleSeries"/> class.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.BubbleSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.BubbleSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.BubbleSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.BubbleSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.CandleSeries">
            <summary>
            Represents a candle chart. To render candle chart, create an instance of this
            class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set 
            the required properties.
            </summary>
            <remarks>
            CandleSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, 
            <see cref="P:Com.Syncfusion.Charts.FinancialSeriesBase.High"/>, <see cref="P:Com.Syncfusion.Charts.FinancialSeriesBase.Low"/>, <see cref="P:Com.Syncfusion.Charts.FinancialSeriesBase.Open"/> and <see cref="P:Com.Syncfusion.Charts.FinancialSeriesBase.Close"/>
            properties to be set to render the chart. This series also requires x-axis and 
            y-axis to be explicitly set either using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and
            <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and 
            <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.CandleSeries.StrokeColor">
            <summary>
            Gets or sets the color for the series stroke.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CandleSeries.EnableSolidCandles">
            <summary>
            Gets or sets the value that indicates whether to enable solid candles.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.CandleSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.CandleSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.CartesianSeries">
            <summary>
            Serves as a base class for all cartesian chart types.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CartesianSeries.XAxis">
            <summary>
             Gets or sets an additional horizontal axis for an individual series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CartesianSeries.YAxis">
            <summary>
            Gets or sets an additional vertical axis for an individual series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CartesianSeries.IsActualTransposed">
            <summary>
            Gets or sets the value that indicating wheather series is transposed or not.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CartesianSeries.Transposed">
            <summary>
            Gets or sets the value that indicates whether to change the cartesian chart orientation.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CartesianSeries.ShowTrackballInfo">
            <summary>
            Gets or sets the value that indicates whether to show trackball for cartesian Series. 
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.CircularSeries">
            <summary>
            Serves as a base class for all types of circular series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CircularSeries.CircularCoefficient">
            <summary>
            Gets or sets double value that represents outer radius of circular segment. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CircularSeries.StartAngle">
            <summary>
            Gets or sets double value which indicates series origin angle. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CircularSeries.EndAngle">
            <summary>
            Gets or sets double value which indicates series end angle. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CircularSeries.SmartLabelsEnabled">
            <summary>
            Gets or sets the value that indicates whether to avoid overlapping of the data marker labels.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CircularSeries.ConnectorType">
            <summary>
            Gets or sets the type of connector line for data markers.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CircularSeries.DataMarkerPosition">
            <summary>
            Gets or sets CircularSeriesDataMarkerPosition that represents data marker position in accumulation layout. 
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.CircularSeries.ExplodeRadius">
            <summary>
            Gets or sets double value which indicates explode radius of series. 
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.ColumnSeries">
            <summary>
            Represents a column chart. To render column chart, create an instance of this
            class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set 
            the required properties.
            </summary>
            <remarks>
            ColumnSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>
            and <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart. 
            This series also requires x-axis and y-axis to be explicitly set either 
            using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/>
            or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.ColumnSeries.StrokeColor">
            <summary>
            Gets or sets the color for the series stroke.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ColumnSeries.CornerRadius">
            <summary>
            Gets or sets the value to draw rounded corners of the segments by using <see cref="T:Com.Syncfusion.Charts.ChartCornerRadius"/>.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ColumnSeries.Spacing">
            <summary>
            Gets or sets the spacing between the segments.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ColumnSeries.Width">
            <summary>
            Gets or sets the width of the segments.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ColumnSeries.DataMarkerPosition">
            <summary>
            Gets or sets the marker position on the segment.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ColumnSeries.IsSideBySide">
            <summary>
            Gets or sets a value indicating whether ChartSeries added to area should be plotted side by side.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Com.Syncfusion.Charts.ColumnSeries"/> class.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ColumnSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.ColumnSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ColumnSeries.CreateSegment(System.Double[])">
            <summary>
            Add the <see cref="T:Com.Syncfusion.Charts.ColumnSegment"/> into the Segments collection.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ColumnSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.ColumnSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.DoughnutSeries">
            <summary>
            Represents a doughnut chart. This chart is similar to <see cref="T:Com.Syncfusion.Charts.PieSeries"/>
            except the DoughnutSeries contains a hole at the center of the series.
            To render doughnut chart, create an instance of this class and add it to
            <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set the required 
            properties.
            </summary>
            <remarks>
            DoughnutSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>
            and <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.DoughnutSeries.DoughnutCoefficient">
            <summary>
            Gets or sets the value that resides between 0 to 1, handles the inner radius of the doughnut series.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.FastLineSeries">
            <summary>
            Represents a line chart. To render this chart, create an instance of this 
            class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and
            set the required properties. This series is optimized to render huge data. 
            Individual line segments cannot be customized like <see cref="T:Com.Syncfusion.Charts.LineSeries"/>.
            </summary>
            <remarks>
            FastLineSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> 
            and <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart. 
            This series also requires x-axis and y-axis to be explicitly set either
            using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/>
            or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="T:Com.Syncfusion.Charts.FinancialSeriesBase">
            <summary>
            Serves as a base class for all types of financial series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialSeriesBase.High">
            <summary>
             Gets or sets the binding path for high value in items source.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialSeriesBase.Low">
            <summary>
            Gets or sets the binding path for low value in items source.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialSeriesBase.Open">
            <summary>
            Gets or sets the binding path for open value in items source.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialSeriesBase.Close">
            <summary>
            Gets or sets the binding path for close value in items source.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialSeriesBase.Spacing">
            <summary>
            Gets or sets the spacing between the segments.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialSeriesBase.Width">
            <summary>
            Gets or sets the width of the segments.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialSeriesBase.BearFillColor">
            <summary>
            Gets or sets the interior of the segment represents bear value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialSeriesBase.BullFillColor">
            <summary>
            Gets or sets the interior of the segment represents bull value.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.FinancialSeriesBase.HighValues">
            <summary>
            Gets or sets the high and low values for range base series.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.FinancialSeriesBase.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed.
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="T:Com.Syncfusion.Charts.FunnelSeries">
            <summary>
            Represents a funnel chart. To render funnel chart, create an instance 
            of this class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection
            property and set the required properties.
            </summary>
            <remarks>
            FunnelSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>,
            <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties 
            to be set to render the chart.
            </remarks>
        </member>
        <member name="F:Com.Syncfusion.Charts.FunnelSeries.minWidth">
            <summary>
            Gets or sets double value that indicates minimum width of last segment. 
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.HiLoOpenCloseSeries">
            <summary>
            Represents a OHLC chart. To render this chart, create an instance 
            of this class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection 
            property and set the required properties.
            </summary>
            <remarks>
            HiLoOpenCloseSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, 
            <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, <see cref="P:Com.Syncfusion.Charts.FinancialSeriesBase.High"/>, <see cref="P:Com.Syncfusion.Charts.FinancialSeriesBase.Low"/>,
            <see cref="P:Com.Syncfusion.Charts.FinancialSeriesBase.Open"/> and <see cref="P:Com.Syncfusion.Charts.FinancialSeriesBase.Close"/> properties to be set to
            render the chart. This series also requires x-axis and y-axis to be
            explicitly set either using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and 
            <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/>
            and <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.HiLoOpenCloseSeries.IsSideBySide">
            <summary>
            Gets or sets a value indicating whether ChartSeries added to area should be plotted side by side.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.HiLoOpenCloseSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.FinancialSeriesBase"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.HiLoOpenCloseSeries.CreateSegment(System.Double[],System.Boolean,System.Boolean)">
            <summary>
            Add the <see cref="T:Com.Syncfusion.Charts.HiLoOpenCloseSegment"/> into the Segments collection.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.HiLoOpenCloseSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.HiLoOpenCloseSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.LineSeries">
            <summary>
            Represents a line chart. To render line chart, create an instance of this 
            class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and 
            set the required properties. Use <see cref="T:Com.Syncfusion.Charts.FastLineSeries"/> to render
            huge data.
            </summary>
            <remarks>
            LineSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> 
            and <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart.
            This series also requires x-axis and y-axis to be explicitly set either 
            using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/>
            or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="M:Com.Syncfusion.Charts.LineSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.LineSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.LineSeries.CreateSegment(System.Double[])">
            <summary>
            Add the <see cref="T:Com.Syncfusion.Charts.LineSegment"/> into the Segments collection.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.LineSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.LineSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="P:Com.Syncfusion.Charts.LineSeries.PathEffect">
            <summary>
            Gets or sets the path effect of the line series.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.PieSeries">
            <summary>
            Represents a pie chart. This chart is similar to 
            <see cref="T:Com.Syncfusion.Charts.DoughnutSeries"/> except the DoughnutSeries contains
            a hole at the center of the series. To render pie chart, create
            an instance of this class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> 
            collection property and set the required properties.
            </summary>
            <remarks>
            PieSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>,
            <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> 
            properties to be set to render the chart.
            </remarks>
        </member>
        <member name="T:Com.Syncfusion.Charts.PyramidSeries">
            <summary>
            Represents a pyramid chart. To render pyramid chart, create an 
            instance of this class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> 
            collection property and set the required properties.
            </summary>
            <remarks>
            PyramidSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, 
            <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties 
            to be set to render the chart.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.PyramidSeries.PyramidMode">
            <summary>
            Gets or sets ChartPyramidMode enum value which indicates the pyramid rendering mode. 
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.RangeAreaSeries">
            <summary>
            Represents a range area chart. To render this chart, create an 
            instance of this class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> 
            collection property and set the required properties.
            </summary>
            <remarks>
            RangeAreaSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>,
            <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, <see cref="P:Com.Syncfusion.Charts.RangeSeriesBase.High"/> and <see cref="P:Com.Syncfusion.Charts.RangeSeriesBase.Low"/>
            properties to be set to render the chart. This series also requires 
            x-axis and y-axis to be explicitly set either using 
            <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> 
            or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeAreaSeries.StrokeColor">
            <summary>
            Gets or sets the color for the series stroke.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.RangeAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Com.Syncfusion.Charts.RangeAreaSeries"/> class.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.RangeAreaSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.RangeAreaSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.RangeAreaSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.RangeAreaSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.RangeColumnSeries">
            <summary>
            Represents a range column chart. To render this chart, create an
            instance of this class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/>
            collection property and set the required properties.
            </summary>
            <remarks>
            RangeColumnSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, 
            <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/>, <see cref="P:Com.Syncfusion.Charts.RangeSeriesBase.High"/> and <see cref="P:Com.Syncfusion.Charts.RangeSeriesBase.Low"/>
            properties to be set to render the chart. This series also requires 
            x-axis and y-axis to be explicitly set either using
            <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/>
            or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeColumnSeries.StrokeColor">
            <summary>
            Gets or sets the color for the series stroke.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeColumnSeries.CornerRadius">
            <summary>
            Gets or sets the value to draw rounded corners of the segments by using <see cref="T:Com.Syncfusion.Charts.ChartCornerRadius"/>.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeColumnSeries.Spacing">
            <summary>
            Gets or sets the spacing between the segments.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeColumnSeries.Width">
            <summary>
            Gets or sets the width of the segments.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeColumnSeries.IsSideBySide">
            <summary>
            Gets or sets a value indicating whether ChartSeries added to area should be plotted side by side.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.RangeColumnSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.RangeColumnSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.RangeColumnSeries.CreateSegment(System.Double[])">
            <summary>
            Add the <see cref="T:Com.Syncfusion.Charts.RangeColumnSegment"/> into the Segments collection.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.RangeColumnSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.RangeColumnSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.RangeSeriesBase">
            <summary>
            Serves as a base class for all types of range series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeSeriesBase.HighValues">
            <summary>
            Gets or sets the high and low values for range base series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeSeriesBase.High">
            <summary>
            Gets or sets the binding path for high value in items source.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.RangeSeriesBase.Low">
            <summary>
            Gets or sets the binding path for low value in items source.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.RangeSeriesBase.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when DataSource property changed.
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="T:Com.Syncfusion.Charts.ScatterSeries">
            <summary>
            Represents a scatter chart. To render this chart, create an instance
            of this class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection 
            property and set the required properties.
            </summary>
            <remarks>
            ScatterSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, 
            <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties
            to be set to render the chart. This series also requires x-axis and
            y-axis to be explicitly set either using
            <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> 
            or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.ScatterSeries.StrokeColor">
            <summary>
            Gets or sets the color for the series stroke.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ScatterSeries.ScatterHeight">
            <summary>
            Gets or sets the scatter segment height.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.ScatterSeries.ScatterWidth">
            <summary>
            Gets or sets the scatter segment width.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ScatterSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Com.Syncfusion.Charts.ScatterSeries"/> class.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ScatterSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.ScatterSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ScatterSeries.CreateSegment(System.Double,System.Double)">
            <summary>
            Add the <see cref="T:Com.Syncfusion.Charts.ScatterSegment"/> into the Segments collection.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ScatterSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.ScatterSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.SplineAreaSeries">
            <summary>
            Represents a spline area chart. To render this chart, create an instance of this class and add it to
            <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set the required properties.
            </summary>
            <remarks>
            SplineAreaSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and 
            <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart. This series also requires x-axis 
            and y-axis to be explicitly set either using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and 
            <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and
            <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="F:Com.Syncfusion.Charts.SplineAreaSeries.splineType">
            <summary>
            Gets or sets <see cref="P:Com.Syncfusion.Charts.SplineAreaSeries.SplineType"/> enum value which indicates the spline series type. 
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.SplineAreaSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.SplineAreaSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.SplineAreaSeries.CreateSegment(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double},System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Add the <see cref="T:Com.Syncfusion.Charts.SplineAreaSegment"/> into the Segments collection.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.SplineAreaSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.SplineAreaSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.SplineSeries">
            <summary>
            Represents a spline chart. To render spline chart, 
            create an instance of this class and add it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> 
            collection property and set the required properties.
            </summary>
            <remarks>
            SplineSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, 
            <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/>
            properties to be set to render the chart. This series also requires 
            x-axis and y-axis to be explicitly set either using 
            <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/>
            or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="F:Com.Syncfusion.Charts.SplineSeries.splineType">
            <summary>
            Gets or sets <see cref="P:Com.Syncfusion.Charts.SplineSeries.SplineType"/> enum value which indicates the spline series type. 
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.SplineSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.SplineSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.SplineSeries.CreateSegment(System.Double[])">
            <summary>
            Add the <see cref="T:Com.Syncfusion.Charts.SplineSegment"/> into the Segments collection.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.SplineSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.SplineSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="F:Com.Syncfusion.Charts.SplineSeries.pathEffect">
            <summary>
            Gets or sets dashes array for the spline 
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.StackingArea100Series">
            <summary>
            Represents a 100% stacked area chart. To render this chart, create an instance of this class and add 
            it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set the required properties.
            </summary>
            <remarks>
            StackingArea100Series requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and
            <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart. This series also requires x-axis
            and y-axis to be explicitly set either using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and  
            <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and 
            <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="T:Com.Syncfusion.Charts.StackingAreaSeries">
            <summary>
            Represents a stacked area chart. To render this chart, create an instance of this class and add it 
            to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set the required properties.
            </summary>
            <remarks>
            StackingAreaSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and 
            <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart. This series also requires x-axis
            and y-axis to be explicitly set either using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and 
            <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and 
            <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="M:Com.Syncfusion.Charts.StackingAreaSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.StackingAreaSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StackingAreaSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.StackingAreaSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.StackingBar100Series">
            <summary>
            Represents a 100% stacked bar chart. To render this chart, create an instance of this class and add it
            to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set the required properties.
            </summary>
            <remarks>
            StackingBar100Series is the transposed version of StackingColumn100Series. Unlike other cartesian chart 
            types, to plot StackingBarSeries, x-axis will be rendered vertically and y-axis will be rendered
            horizontally. Hence, it is not possible to plot other chart types along with StackingBarSeries. 
            Multiple StackingBarSeries can be added in a single <see cref="T:Com.Syncfusion.Charts.SfChart"/>.
            StackingBarSeries requires<see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref = "P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and 
            <see cref= "P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart. This series also requires x-axis
            and y-axis to be explicitly set either using <see cref = "P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and
            <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and 
            <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="M:Com.Syncfusion.Charts.StackingColumn100Series.#ctor">
            <summary>
            Represents a 100% stacked column chart. To render this chart, create an instance of this class and add
            it to <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set the required properties.
            </summary>
            <remarks>
            StackingColumn100Series requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and 
            <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart. This series also requires x-axis 
            and y-axis to be explicitly set either using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and  
            <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and 
            <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="T:Com.Syncfusion.Charts.StackingColumnSeries">
            <summary>
            Represents a stacked column chart. To render this chart, create an instance of this class and add it to
            <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set the required properties.
            </summary>
            <remarks>
            StackingColumnSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and
            <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart. This series also requires x-axis 
            and y-axis to be explicitly set either using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and 
            <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and
            <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingColumnSeries.Spacing">
            <summary>
            Gets or sets the spacing between the segments.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingColumnSeries.CornerRadius">
            <summary>
            Gets or sets the value to draw rounded corners of the segments by using <see cref="T:Com.Syncfusion.Charts.ChartCornerRadius"/>.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingColumnSeries.DataMarkerPosition">
            <summary>
            Gets or sets the data marker position.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingColumnSeries.Width">
            <summary>
            Gets or sets the width of the segments.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingColumnSeries.IsSideBySide">
            <summary>
            Gets or sets a value indicating whether ChartSeries added to area should be plotted side by side.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StackingColumnSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.StackingColumnSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StackingColumnSeries.CreateSegment(System.Double[])">
            <summary>
            Add the <see cref="T:Com.Syncfusion.Charts.ColumnSegment"/> into the Segments collection.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StackingColumnSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.ColumnSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.StackingSeriesBase">
            <summary>
            Serves as a base class for all types of stacked series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingSeriesBase.StrokeColor">
            <summary>
            Gets or sets the color for the series stroke.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.StackingSeriesBase.GroupingLabel">
            <summary>
            Gets or sets the text that is used to classify or group the series.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StackingSeriesBase.CalculateStackingValues">
            <summary>
            Method used to calculate the stacking values.
            </summary>
        </member>
        <member name="T:Com.Syncfusion.Charts.StepAreaSeries">
            <summary>
            Represents a step area chart. To render this chart, create an instance of this class and add it to
            <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set the required properties.
            </summary>
            <remarks>
            StepAreaSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and 
            <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart. This series also requires x-axis 
            and y-axis to be explicitly set either using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and
            <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and
            <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="M:Com.Syncfusion.Charts.StepAreaSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.StepAreaSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StepAreaSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.StepAreaSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.StepLineSeries">
            <summary>
            Represents a step line chart. To render this chart, create an instance of this class and add it to
            <see cref="P:Com.Syncfusion.Charts.ChartBase.Series"/> collection property and set the required properties.
            </summary>
            <remarks>
            StepLineSeries requires <see cref="P:Com.Syncfusion.Charts.ChartSeries.ItemsSource"/>, <see cref="P:Com.Syncfusion.Charts.ChartSeries.XBindingPath"/> and
            <see cref="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath"/> properties to be set to render the chart. This series also requires x-axis 
            and y-axis to be explicitly set either using <see cref="P:Com.Syncfusion.Charts.ChartBase.PrimaryAxis"/> and  
            <see cref="P:Com.Syncfusion.Charts.ChartBase.SecondaryAxis"/> or <see cref="P:Com.Syncfusion.Charts.CartesianSeries.XAxis"/> and
            <see cref="P:Com.Syncfusion.Charts.CartesianSeries.YAxis"/>.
            </remarks>
        </member>
        <member name="M:Com.Syncfusion.Charts.StepLineSeries.CreateSegments">
            <summary>
            Creates the segments of <see cref="T:Com.Syncfusion.Charts.StepLineSeries"/>.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StepLineSeries.CreateSegment(System.Double[])">
            <summary>
            Add the <see cref="T:Com.Syncfusion.Charts.StepLineSegment"/> into the Segments collection.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.StepLineSeries.CreateSegment">
            <summary>
            Create the <see cref="T:Com.Syncfusion.Charts.StepLineSegment"/>.
            </summary>
            <returns>Returns a segment.</returns>
        </member>
        <member name="T:Com.Syncfusion.Charts.TriangularSeries">
            <summary>
            Serves as a base class for all types of triangular series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.TriangularSeries.GapRatio">
            <summary>
            Gets or sets double value that indicates ratio of gap between the triangular series segments.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.TriangularSeries.ExplodeOffset">
            <summary>
            Gets or sets the double value that indicates explode offset of exploded segment. 
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.TriangularSeries.CreateDataMarkerLablesOfSegments(System.Int32)">
            <summary>
            Method to create a DataMarkerLables depends upon Segments ToggleVisibility
            </summary>
            <param name="i"></param>
        </member>
        <member name="T:Com.Syncfusion.Charts.XyDataSeries">
            <summary>
            Serves as a base class for all types of xy series.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.XyDataSeries.YBindingPath">
            <summary>
            Gets or sets the YBinding path in items source.
            </summary>
        </member>
        <member name="P:Com.Syncfusion.Charts.XyDataSeries.YValues">
            <summary>
            Gets or sets the y values.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.XyDataSeries.OnDataSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Called when the data source was changed.
            </summary>
            <param name="oldValue">Old value.</param>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.XyDataSeries.NaturalSpline">
            <summary>
            Calculate the co-efficient values for the natural Spline
            </summary>
            <returns>The spline.</returns>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAnnotation.Chart">
            <summary>
            Gets or sets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAnnotation.X1">
            <summary>
            Gets or sets the Datetime or double that represents x1 position of annotation.
            </summary>
            <value>The x1.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAnnotation.Y1">
            <summary>
            Gets or sets the double that represents y1 position of annotation.
            </summary>
            <value>The y1.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAnnotation.XAxisName">
            <summary>
            Gets or sets the string value that represents name of the x axis. 
            </summary>
            <value>The name of the X Axis.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAnnotation.YAxisName">
            <summary>
            Gets or sets the string value that represents name of the y axis. 
            </summary>
            <value>The name of the Y Axis.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAnnotation.CoordinateUnit">
            <summary>
            Gets or sets the <see cref="T:Com.Syncfusion.Charts.ChartCoordinateUnit"/> enum that represents whether annotation is draw on pixel co-ordinates or axis co-ordinates.
            </summary>
            <value>The co-ordinate point for Annotation.</value>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartAnnotation.UpdateAnnotation">
            <summary>
            Measure and arranges the annotation position.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ChartAnnotation.Draw(Android.Graphics.Canvas)">
            <summary>
            Method used to draw annotation in chart area.
            </summary>
            <returns>The draw.</returns>
            <param name="context">Context.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAnnotationRenderer.Chart">
            <summary>
            Gets or sets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.EllipseAnnotation.Height">
            <summary>
            Gets or sets the height of the ellipse annotation.
            </summary>
            <value>This property takes float value.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.EllipseAnnotation.Width">
            <summary>
            Gets or sets the width of the ellipse annotation.
            </summary>
            <value>This property takes float value.</value>
        </member>
        <member name="M:Com.Syncfusion.Charts.EllipseAnnotation.UpdateAnnotation">
            <summary>
            Measure and arranges the annotation position.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.EllipseAnnotation.Draw(Android.Graphics.Canvas)">
            <summary>
            Method used to draw annotation in chart area.
            </summary>
            <returns>The draw.</returns>
            <param name="context">Context.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.HorizontalLineAnnotation.AxisLabelStyle">
            <summary>
            Gets the customized style for the annotation axis label by using <see cref="T:Com.Syncfusion.Charts.ChartLabelStyle"/>.
            </summary>
            <value>The axis label style.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.HorizontalLineAnnotation.ShowAxisLabel">
            <summary>
            Gets or sets the whether axis label shows or not in annotation.
            </summary>
            <value>This property takes bool value.</value>
        </member>
        <member name="M:Com.Syncfusion.Charts.HorizontalLineAnnotation.UpdateAnnotation">
            <summary>
            Measure and arranges the annotation position.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.HorizontalLineAnnotation.SetTextAlignment(System.Drawing.RectangleF)">
            <summary>
            Sets the text alignment for annotation label.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.HorizontalLineAnnotation.Draw(Android.Graphics.Canvas)">
             <summary>
             Method used to draw annotation in chart area.
             </summary>
             <returns>The draw.</returns>
             <param name="context">Context.
            </param>
        </member>
        <member name="M:Com.Syncfusion.Charts.HorizontalLineAnnotation.DrawAxisLabel(Android.Graphics.Canvas,System.String,System.Double,System.Double)">
            <summary>
            Draws the axis label.
            </summary>
            <param name="ctx">Context.</param>
            <param name="label">Label.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.HorizontalLineAnnotation.DrawAxisLabelBackground(Android.Graphics.Canvas,System.Drawing.RectangleF)">
            <summary>
            Draws the axis label background.
            </summary>
            <param name="ctx">Context.</param>
            <param name="rect">Rect.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.LineAnnotation.LineCap">
            <summary>
            Gets or sets the line cap for line annotation by using <see cref="T:Com.Syncfusion.Charts.ChartLineCap"/> enum type.
            </summary>
            <value>This property takes enum LineCap value.</value>
        </member>
        <member name="M:Com.Syncfusion.Charts.LineAnnotation.UpdateAnnotation">
            <summary>
            Measure and arranges the annotation position.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.LineAnnotation.SetTextAlignment(System.Drawing.RectangleF)">
            <summary>
            Sets the text alignment for annotation label.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.LineAnnotation.SetHorizontalAnnotationTextAlignment(System.Drawing.RectangleF)">
            <summary>
            Sets the text alignment for horizontal line annotation label.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.LineAnnotation.SetVerticalAnnotationTextAlignment(System.Drawing.RectangleF)">
            <summary>
            Sets the text alignment for vertical line annotation label.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.LineAnnotation.Draw(Android.Graphics.Canvas)">
            <summary>
            Method used to draw annotation in chart area.
            </summary>
            <returns>The draw.</returns>
            <param name="context">Context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.LineAnnotation.CalculateArrowPoints(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates the triangle points to draw arrow.
            </summary>
            <returns>The triangle points.</returns>
            <param name="xPos1">X pos1.</param>
            <param name="yPos1">Y pos1.</param>
            <param name="xPos2">X pos2.</param>
            <param name="yPos2">Y pos2.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.RectangleAnnotation.CornerRadius">
            <summary>
            Gets or sets the corner radius of the rectangle annotation. 
            </summary>
            <value>This property takes nfloat value.</value>
        </member>
        <member name="M:Com.Syncfusion.Charts.RectangleAnnotation.UpdateAnnotation">
            <summary>
            Measure and arranges the annotation position.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.RectangleAnnotation.Draw(Android.Graphics.Canvas)">
            <summary>
            Method used to draw annotation in chart area.
            </summary>
            <returns>The draw.</returns>
            <param name="context">Context.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.ShapeAnnotation.X2">
            <summary>
            Gets or sets the Datetime or double that represents x2 position of annotation.
            </summary>
            <value>The x2.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ShapeAnnotation.Y2">
            <summary>
            Gets or sets the double that represents y2 position of annotation.
            </summary>
            <value>The y2.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ShapeAnnotation.FillColor">
            <summary>
            Gets or sets the Color that indicates color of the annotation.
            </summary>
            <value>The color of the fill.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ShapeAnnotation.StrokeColor">
            <summary>
            Gets or sets the Color that indicates stroke color of the annotation.
            </summary>
            <value>The stroke.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ShapeAnnotation.StrokeWidth">
            <summary>
            Gets or sets the float value that represents stroke width of the annotation.
            </summary>
            <value>The width of the stroke.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ShapeAnnotation.StrokeDashArray">
            <summary>
            Gets or sets the NSArray that represents dashes for annotation stroke.
            </summary>
            <value>The stroke dash array.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ShapeAnnotation.Text">
            <summary>
            Gets or sets the string value that represents text to be displayed on the annotation. 
            </summary> 
            <value>The annotation text.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ShapeAnnotation.LabelStyle">
            <summary>
            Gets the customized style for the annotation text using <see cref="T:Com.Syncfusion.Charts.ChartAnnotationLabelStyle"/>.
            </summary>
            <value>The label style.</value>
        </member>
        <member name="M:Com.Syncfusion.Charts.ShapeAnnotation.ArrangeLabelPostion(System.Single,System.Single)">
            <summary>
            Arranges the annotation label postion.
            </summary>
            <param name="xPosition">X position.</param>
            <param name="yPosition">Y position.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ShapeAnnotation.SetTextAlignment(System.Drawing.RectangleF)">
            <summary>
            Sets the text alignment for annotation label.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ShapeAnnotation.Draw(Android.Graphics.Canvas)">
            <summary>
            Method used to draw annotation in chart area.
            </summary>
            <returns>The draw.</returns>
            <param name="context">Context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ShapeAnnotation.DrawLabel(Android.Graphics.Canvas,System.String,System.Double,System.Double)">
            <summary>
            Draws the annotation label.
            </summary>
            <param name="label">Label.</param>
            <param name="ctx">Context.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ShapeAnnotation.DrawLabelBackground(Android.Graphics.Canvas,System.Drawing.RectangleF)">
            <summary>
            Draws the annotation label background.
            </summary>
            <param name="rect">Rect.</param>
            <param name="ctx">Context.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.TextAnnotation.Text">
            <summary>
            Gets or sets the text to be displayed on the annotation.
            </summary> 
            <value>The annotation text.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.TextAnnotation.LabelStyle">
            <summary>
            Gets the customized style for the annotation text using <see cref="T:Com.Syncfusion.Charts.ChartAnnotationLabelStyle"/>.
            </summary>
            <value>The label style.</value>
        </member>
        <member name="M:Com.Syncfusion.Charts.TextAnnotation.UpdateAnnotation">
            <summary>
            Measure and arranges the annotation position.
            </summary> 
        </member>
        <member name="M:Com.Syncfusion.Charts.TextAnnotation.ArrangeLabelPostion(System.Single,System.Single)">
            <summary>
            Arranges the label postion for text annotation.
            </summary>
            <param name="xPosition">X position.</param>
            <param name="yPosition">Y position.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.TextAnnotation.SetTextAlignment">
            <summary>
            Sets the text alignment for text annotation.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.TextAnnotation.Draw(Android.Graphics.Canvas)">
            <summary>
            Method used to draw annotation in chart area.
            </summary>
            <returns>The draw.</returns>
            <param name="context">Context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.TextAnnotation.DrawLabel(Android.Graphics.Canvas,System.String,System.Double,System.Double)">
            <summary>
            Draws the annotation label.
            </summary>
            <param name="label">Label.</param>
            <param name="ctx">Context.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.TextAnnotation.DrawLabelBackground(Android.Graphics.Canvas,System.Drawing.RectangleF)">
            <summary>
            Draws the annotation label background.
            </summary>
            <param name="rect">Rect.</param>
            <param name="ctx">Context.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.VerticalLineAnnotation.AxisLabelStyle">
            <summary>
            Gets the customized style for the annotation axis label by using <see cref="T:Com.Syncfusion.Charts.ChartLabelStyle"/>.
            </summary>
            <value>The axis label style.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.VerticalLineAnnotation.ShowAxisLabel">
            <summary>
            Gets or sets the whether axis label shows or not in annotation.
            </summary>
            <value>This property takes bool value.</value>
        </member>
        <member name="M:Com.Syncfusion.Charts.VerticalLineAnnotation.UpdateAnnotation">
            <summary>
            Measure and arranges the annotation position.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.VerticalLineAnnotation.SetTextAlignment(System.Drawing.RectangleF)">
            <summary>
            Sets the text alignment for annotation label.
            </summary>
            <param name="rect">Rect.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.VerticalLineAnnotation.Draw(Android.Graphics.Canvas)">
            <summary>
            Method used to draw annotation in chart area.
            </summary>
            <returns>The draw.</returns>
            <param name="context">Context.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.VerticalLineAnnotation.DrawAxisLabel(Android.Graphics.Canvas,System.String,System.Double,System.Double)">
            <summary>
            Draws the axis label.
            </summary>
            <param name="label">Label.</param>
            <param name="ctx">Context.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.VerticalLineAnnotation.DrawAxisLabelBackground(Android.Graphics.Canvas,System.Drawing.RectangleF)">
            <summary>
            Draws the axis label background.
            </summary>
            <param name="rect">Rect.</param>
            <param name="ctx">Context.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.ViewAnnotation.View">
            <summary>
            Gets or sets the View that represents customview for annotation.
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ViewAnnotation.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the view by using <see cref="T:Com.Syncfusion.Charts.ChartAnnotationAlignment"/> enum type.
            </summary>
            <value>This property takes SFChartAlignment value.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ViewAnnotation.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the view by using <see cref="T:Com.Syncfusion.Charts.ChartAnnotationAlignment"/> enum type.
            </summary>
            <value>This property takes SFChartAlignment value.</value>
        </member>
        <member name="M:Com.Syncfusion.Charts.ViewAnnotation.UpdateAnnotation">
            <summary>
            Measure and arranges the annotation position.
            </summary>
        </member>
        <member name="M:Com.Syncfusion.Charts.ViewAnnotation.SetViewAlignment(System.Drawing.RectangleF)">
            <summary>
            Sets the view alignment for view annotation.
            </summary>
            <param name="frame">Frame.</param>
        </member>
        <member name="M:Com.Syncfusion.Charts.ViewAnnotation.Draw(Android.Graphics.Canvas)">
            <summary>
            Method used to draw annotation in chart area.
            </summary>
            <returns>The draw.</returns>
            <param name="context">Context.</param>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAnnotationLabelStyle.HorizontalLabelAlignment">
            <summary>
            Gets or sets the horizontal label alignment.
            </summary>
            <value>The horizontal label alignment.</value>
        </member>
        <member name="P:Com.Syncfusion.Charts.ChartAnnotationLabelStyle.VerticalLabelAlignment">
            <summary>
            Gets or sets the vertical label alignment.
            </summary>
            <value>The vertical label alignment.</value>
        </member>
    </members>
</doc>
